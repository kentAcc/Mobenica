{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducer.js","constants/orderContants.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","components/Meta.js","actions/productAction.js","components/ProductCarouserl.js","screens/HomeScreen.js","components/ImageZoom.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/profileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/userEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderPay","orderListMy","orders","orderListAll","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useDispatch","useSelector","Navbar","expand","collapseOnSelect","Container","Toggle","aria-controls","Collapse","render","Nav","Link","href","NavDropdown","title","Item","Divider","to","onClick","removeItem","isAdmin","Image","src","fluid","Footer","Row","Rating","text","color","style","defaultProps","Product","Card","_id","Img","image","split","Body","Title","as","Text","price","Message","children","booltemporary","show","setShow","useEffect","timeoutID","window","setTimeout","console","log","clearTimeout","Alert","onClose","dismissible","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","key","active","Meta","descripcion","keywords","Helmet","content","listProducts","pageNumber","listProductDetails","ProductCarousel","Carousel","pause","length","alt","Caption","HomeScreen","match","params","process","ProductCarouserl","index","Col","sm","md","lg","xl","toString","xs","ImageZoom","images","tempData","substring","forEach","string","data1","showDescription","direction","ProductScreen","qty","setQty","setRating","setComment","productDatails","successProductReview","alert","ListGroup","rating","numReviews","description","countStock","ListGroupItem","countInStock","disabled","addToCart","setItem","stringify","CartScreen","location","productId","search","Number","removeFromCartHandler","removeFromCart","rounded","producto","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","post","login","Group","controlId","Label","RegisterScreen","setName","confirmPassword","setconfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","createdAt","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","postalcode","createOrder","orderItems","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","paypal","DeliveredAt","currency","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUsers","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","PageNumber","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountStock","setDescription","uploding","setUpLoading","UploadFileHandler","files","i","file","formData","FormData","append","updateProduct","File","custom","multiple","OrderListScreen","isDeliverd","deliverdAt","App","path","component","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"uNA+BMA,EAAUC,0BAAgB,CAC9BC,YCLgC,WAAuC,IAAtCC,EAAqC,uDAA7B,CAAEC,SAAU,IAAMC,EAAW,uCACtE,OAAQA,EAAOC,MACb,IC7BgC,uBD8B9B,MAAO,CAAEC,SAAS,EAAMH,SAAU,IACpC,IC9BgC,uBD+B9B,MAAO,CACLG,SAAS,EACTH,SAAUC,EAAOG,QAAQJ,SACzBK,MAAOJ,EAAOG,QAAQC,MACtBC,KAAML,EAAOG,QAAQE,MAEzB,ICpC6B,oBDqC3B,MAAO,CAAEH,SAAS,EAAOI,MAAON,EAAOG,SACzC,QACE,OAAOL,IDRXS,eCWmC,WAG/B,IAFJT,EAEG,uDAFK,CAAEU,QAAS,CAAEC,QAAS,KAC9BT,EACG,uCACH,OAAQA,EAAOC,MACb,IC7CmC,0BD8CjC,OAAO,aAAEC,SAAS,GAASJ,GAC7B,IC9CmC,0BD+CjC,MAAO,CAAEI,SAAS,EAAOM,QAASR,EAAOG,SAC3C,IC/CgC,uBDgD9B,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,QACE,OAAOL,IDtBXY,cCyBkC,WAAyB,IAAxBZ,EAAuB,uDAAf,GAAIE,EAAW,uCAC1D,OAAQA,EAAOC,MACb,ICrDkC,yBDsDhC,MAAO,CAAEC,SAAS,GACpB,ICtDkC,yBDuDhC,MAAO,CAAEA,SAAS,EAAOS,SAAS,GACpC,ICvD+B,sBDwD7B,MAAO,CAAET,SAAS,EAAOI,MAAON,EAAOG,SACzC,QACE,OAAOL,IDjCXc,cCoCkC,WAAyB,IAAxBd,EAAuB,uDAAf,GAAIE,EAAW,uCAC1D,OAAQA,EAAOC,MACb,IC7DkC,yBD8DhC,MAAO,CAAEC,SAAS,GACpB,IC9DkC,yBD+DhC,MAAO,CAAEA,SAAS,EAAOS,SAAS,EAAMH,QAASR,EAAOG,SAC1D,IC/D+B,sBDgE7B,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,IChEgC,uBDiE9B,MAAO,GACT,QACE,OAAOL,ID9CXe,cCiDkC,WAAsC,IAArCf,EAAoC,uDAA5B,CAAEU,QAAS,IAAMR,EAAW,uCACvE,OAAQA,EAAOC,MACb,ICtEkC,yBDuEhC,MAAO,CAAEC,SAAS,GACpB,ICvEkC,yBDwEhC,MAAO,CAAEA,SAAS,EAAOS,SAAS,EAAMH,QAASR,EAAOG,SAC1D,ICxE+B,sBDyE7B,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,ICzEgC,uBD0E9B,MAAO,CAAEK,QAAS,IACpB,QACE,OAAOV,ID3DXgB,oBC8DwC,WAAyB,IAAxBhB,EAAuB,uDAAf,GAAIE,EAAW,uCAChE,OAAQA,EAAOC,MACb,IC/EyC,gCDgFvC,MAAO,CAAEC,SAAS,GACpB,IChFyC,gCDiFvC,MAAO,CAAEA,SAAS,EAAOS,SAAS,GACpC,ICjFsC,6BDkFpC,MAAO,CAAET,SAAS,EAAOI,MAAON,EAAOG,SACzC,IClFuC,8BDmFrC,MAAO,GACT,QACE,OAAOL,IDxEXiB,gBC2EoC,WAAuC,IAAtCjB,EAAqC,uDAA7B,CAAEC,SAAU,IAAMC,EAAW,uCAC1E,OAAQA,EAAOC,MACb,ICxF+B,sBDyF7B,MAAO,CAAEC,SAAS,EAAMH,SAAU,IACpC,ICzF+B,sBD0F7B,MAAO,CAAEG,SAAS,EAAOH,SAAUC,EAAOG,SAC5C,IC1F4B,mBD2F1B,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SAEzC,QACE,OAAOL,IDpFXkB,KGhCyB,WAGrB,IAFJlB,EAEG,uDAFK,CAAEmB,UAAW,GAAIC,gBAAiB,IAC1ClB,EACG,uCACH,OAAQA,EAAOC,MACb,ICZyB,gBDavB,IAAMkB,EAAOnB,EAAOG,QACdiB,EAAYtB,EAAMmB,UAAUI,MAAK,SAACC,GAAD,OAAOA,EAAEd,UAAYW,EAAKX,WAEjE,OAAIY,EACK,2BACFtB,GADL,IAEEmB,UAAWnB,EAAMmB,UAAUM,KAAI,SAACD,GAAD,OAC7BA,EAAEd,UAAYY,EAAUZ,QAAUW,EAAOG,OAItC,2BACFxB,GADL,IAEEmB,UAAU,GAAD,mBAAMnB,EAAMmB,WAAZ,CAAuBE,MAItC,IC7B4B,mBD8B1B,OAAO,2BACFrB,GADL,IAEEmB,UAAWnB,EAAMmB,UAAUO,QAAO,SAACF,GAAD,OAAOA,EAAEd,UAAYR,EAAOG,aAElE,ICjCsC,6BDkCpC,OAAO,2BACFL,GADL,IAEEoB,gBAAiBlB,EAAOG,UAE5B,ICrCoC,2BDsClC,OAAO,2BACFL,GADL,IAEE2B,cAAezB,EAAOG,UAE1B,QACE,OAAOL,IHNX4B,UKX8B,WAAyB,IAAxB5B,EAAuB,uDAAf,GAAIE,EAAW,uCACtD,OAAQA,EAAOC,MACb,IC/B8B,qBDgC5B,MAAO,CAAEC,SAAS,GACpB,IChC8B,qBDiC5B,MAAO,CAAEA,SAAS,EAAOyB,SAAU3B,EAAOG,SAC5C,ICjC2B,kBDkCzB,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,IClC6B,oBDmC3B,MAAO,CAAED,SAAS,GACpB,QACE,OAAOJ,ILCX8B,aKGiC,WAAyB,IAAxB9B,EAAuB,uDAAf,GAAIE,EAAW,uCACzD,OAAQA,EAAOC,MACb,ICzCiC,wBD0C/B,MAAO,CAAEC,SAAS,GACpB,IC1CiC,wBD2C/B,MAAO,CAAEA,SAAS,EAAOyB,SAAU3B,EAAOG,SAC5C,IC3C8B,qBD4C5B,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SAEzC,QACE,OAAOL,ILZX+B,YKgBgC,WAAmC,IAAlC/B,EAAiC,uDAAzB,CAAEgC,KAAM,IAAM9B,EAAW,uCAClE,OAAQA,EAAOC,MACb,ICnDgC,uBDoD9B,OAAO,2BAAKH,GAAZ,IAAmBI,SAAS,IAC9B,ICpDgC,uBDqD9B,MAAO,CAAEA,SAAS,EAAO4B,KAAM9B,EAAOG,SACxC,ICrD6B,oBDsD3B,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,ICtD8B,qBDuD5B,MAAO,CAAE2B,KAAM,IAEjB,QACE,OAAOhC,IL3BXiC,kBK+BsC,WAAyB,IAAxBjC,EAAuB,uDAAf,GAAIE,EAAW,uCAC9D,OAAQA,EAAOC,MACb,IC9DuC,8BD+DrC,MAAO,CAAEC,SAAS,GACpB,IC/DuC,8BDgErC,MAAO,CAAEA,SAAS,EAAOS,SAAS,EAAMgB,SAAU3B,EAAOG,SAC3D,IChEoC,2BDiElC,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,ICjEqC,4BDkEnC,MAAO,GACT,QACE,OAAOL,ILzCXkC,SK6C6B,WAAoC,IAAnClC,EAAkC,uDAA1B,CAAEmC,MAAO,IAAMjC,EAAW,uCAChE,OAAQA,EAAOC,MACb,ICxE6B,oBDyE3B,MAAO,CAAEC,SAAS,GACpB,ICzE6B,oBD0E3B,MAAO,CAAEA,SAAS,EAAO+B,MAAOjC,EAAOG,SACzC,IC1E0B,iBD2ExB,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,IC3E2B,kBD4EzB,MAAO,CAAE8B,MAAO,IAClB,QACE,OAAOnC,ILvDXoC,WK0D+B,WAAyB,IAAxBpC,EAAuB,uDAAf,GAAIE,EAAW,uCACvD,OAAQA,EAAOC,MACb,ICjF+B,sBDkF7B,MAAO,CAAEC,SAAS,GACpB,IClF+B,sBDmF7B,MAAO,CAAEA,SAAS,EAAOS,SAAS,GACpC,ICnF4B,mBDoF1B,MAAO,CAAET,SAAS,EAAOI,MAAON,EAAOG,SAEzC,QACE,OAAOL,ILnEXqC,WKsE+B,WAAmC,IAAlCrC,EAAiC,uDAAzB,CAAEgC,KAAM,IAAM9B,EAAW,uCACjE,OAAQA,EAAOC,MACb,IC1F+B,sBD2F7B,MAAO,CAAEC,SAAS,GACpB,IC3F+B,sBD4F7B,MAAO,CAAEA,SAAS,EAAOS,SAAS,GACpC,IC5F4B,mBD6F1B,MAAO,CAAET,SAAS,EAAOI,MAAON,EAAOG,SACzC,IC7F6B,oBD8F3B,MAAO,CAAE2B,KAAM,IACjB,QACE,OAAOhC,ILhFXsC,YOvBgC,WAAyB,IAAxBtC,EAAuB,uDAAf,GAAIE,EAAW,uCACxD,OAAQA,EAAOC,MACb,IC1BgC,uBD2B9B,MAAO,CACLC,SAAS,GAEb,IC7BgC,uBD8B9B,MAAO,CACLA,SAAS,EACTS,SAAS,EACT0B,MAAOrC,EAAOG,SAElB,IClC6B,oBDmC3B,MAAO,CACLD,SAAS,EACTI,MAAON,EAAOG,SAElB,QACE,OAAOL,IPMXwC,aOFiC,WAG7B,IAFJxC,EAEG,uDAFK,CAAEI,SAAS,EAAMmC,MAAO,GAAInB,gBAAiB,IACrDlB,EACG,uCACH,OAAQA,EAAOC,MACb,IC/CiC,wBDgD/B,OAAO,2BACFH,GADL,IAEEI,SAAS,IAEb,ICnDiC,wBDoD/B,MAAO,CACLA,SAAS,EAETmC,MAAOrC,EAAOG,SAElB,ICxD8B,qBDyD5B,MAAO,CACLD,SAAS,EACTI,MAAON,EAAOG,SAElB,QACE,OAAOL,IPnBXyC,SOuB6B,WAAyB,IAAxBzC,EAAuB,uDAAf,GAAIE,EAAW,uCACrD,OAAQA,EAAOC,MACb,IClE6B,oBDmE3B,MAAO,CACLC,SAAS,GAEb,ICrE6B,oBDsE3B,MAAO,CACLA,SAAS,EACTS,SAAS,GAEb,ICzE0B,iBD0ExB,MAAO,CACLT,SAAS,EACTI,MAAON,EAAOG,SAElB,IC7E2B,kBD8EzB,MAAO,GACT,QACE,OAAOL,IPzCX0C,YOmEgC,WAAqC,IAApC1C,EAAmC,uDAA3B,CAAE2C,OAAQ,IAAMzC,EAAW,uCACpE,OAAQA,EAAOC,MACb,IC1GiC,wBD2G/B,MAAO,CACLC,SAAS,GAEb,IC7GiC,wBD8G/B,MAAO,CACLA,SAAS,EACTuC,OAAQzC,EAAOG,SAEnB,ICjH8B,qBDkH5B,MAAO,CACLD,SAAS,EACTI,MAAON,EAAOG,SAElB,ICrH+B,sBDsH7B,MAAO,CAAEsC,OAAQ,IAEnB,QACE,OAAO3C,IPtFX4C,aO0FiC,WAAqC,IAApC5C,EAAmC,uDAA3B,CAAE2C,OAAQ,IAAMzC,EAAW,uCACrE,OAAQA,EAAOC,MACb,IC7HkC,yBD8HhC,MAAO,CACLC,SAAS,GAEb,IChIkC,yBDiIhC,MAAO,CACLA,SAAS,EACTuC,OAAQzC,EAAOG,SAEnB,ICpI+B,sBDqI7B,MAAO,CACLD,SAAS,EACTI,MAAON,EAAOG,SAGlB,QACE,OAAOL,IP3GX6C,aO2CiC,WAAyB,IAAxB7C,EAAuB,uDAAf,GAAIE,EAAW,uCACzD,OAAQA,EAAOC,MACb,IC3EiC,wBD4E/B,MAAO,CACLC,SAAS,GAEb,IC9EiC,wBD+E/B,MAAO,CACLA,SAAS,EACTS,SAAS,GAEb,IClF8B,qBDmF5B,MAAO,CACLT,SAAS,EACTI,MAAON,EAAOG,SAElB,ICtF+B,sBDuF7B,MAAO,GACT,QACE,OAAOL,MP3DP8C,EAAuBC,aAAaC,QAAQ,aAC9CC,KAAKC,MAAMH,aAAaC,QAAQ,cAChC,GAEEG,EAAsBJ,aAAaC,QAAQ,YAC7CC,KAAKC,MAAMH,aAAaC,QAAQ,aAChC,KAMEI,EAAe,CACnBlC,KAAM,CACJC,UAAW2B,EACX1B,gBAP+B2B,aAAaC,QAAQ,mBACpDC,KAAKC,MAAMH,aAAaC,QAAQ,oBAChC,IAOFpB,UAAW,CAAEC,SAAUsB,IAEnBE,EAAa,CAACC,KAQLC,EANDC,sBACZ3D,EACAuD,EACAK,8BAAoBC,kBAAe,WAAf,EAAmBL,K,2GShD1BM,EA5BG,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACHC,mBAAS,IADN,mBAC1BC,EAD0B,KACjBC,EADiB,KAUjC,OACE,kBAACC,EAAA,EAAD,CAAMC,SATc,SAACC,GACrBA,EAAEC,iBACEL,EAAQM,OACVR,EAAQS,KAAR,kBAAwBP,IAExBF,EAAQS,KAAK,MAIgBC,QAAM,GACnC,kBAACN,EAAA,EAAKO,QAAN,CACEpE,KAAK,OACLqE,KAAK,IACLC,SAAU,SAACP,GAAD,OAAOH,EAAWG,EAAEQ,OAAOC,QACrCC,YAAY,sBACZC,UAAU,uDAEZ,kBAACC,EAAA,EAAD,CAAQ3E,KAAK,SAAS4E,QAAQ,kBAAkBF,UAAU,gCAA1D,e,yCC8FOG,EAAiB,SAACC,GAAD,8CAAQ,WAAOC,EAAUC,GAAjB,uBAAAC,EAAA,sEAElCF,EAAS,CACP/E,KJ9G8B,yBI2GE,EAO9BgF,IADWtD,EANmB,EAMhCD,UAAaC,SAETwD,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1D,EAAS2D,SAXJ,SAeXC,IAAMC,IAAN,qBAAwBT,GAAMI,GAfnB,gBAe1BM,EAf0B,EAe1BA,KAERT,EAAS,CACP/E,KJ5H8B,uBI6H9BE,QAASsF,IAnBuB,kDAsBlCT,EAAS,CACP/E,KJhI2B,oBIiI3BE,QACE,KAAMuF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA3BoB,0DAAR,yDCxBfC,MAnFf,WACE,IAAMZ,EAAWa,cAETlE,EADUmE,aAAY,SAAChG,GAAD,OAAWA,EAAM4B,aACvCC,SAMR,OACE,gCACE,kBAACoE,EAAA,EAAD,CAAQpB,UAAU,YAAYE,QAAQ,OAAOmB,OAAO,KAAKC,kBAAgB,GACvE,kBAACC,EAAA,EAAD,KAEE,kBAACH,EAAA,EAAOI,OAAR,CAAeC,gBAAc,qBAC7B,kBAACL,EAAA,EAAOM,SAAR,CAAiBtB,GAAG,oBAClB,kBAAC,IAAD,CACEuB,OAAQ,gBAAG5C,EAAH,EAAGA,QAAH,OACN,kBAAC,EAAD,CAAWA,QAASA,OAGxB,kBAAC6C,EAAA,EAAD,CAAK5B,UAAU,WACf,kBAAC4B,EAAA,EAAIC,KAAL,CAAUC,KAAK,SAAf,UACA,kBAACF,EAAA,EAAIC,KAAL,CAAUC,KAAK,SAAf,WACA,kBAACC,EAAA,EAAD,CAAaC,MAAM,QAAQ5B,GAAG,sBAC9B,kBAAC2B,EAAA,EAAYE,KAAb,CAAkBH,KAAK,eAAvB,iBACA,kBAACC,EAAA,EAAYE,KAAb,CAAkBH,KAAK,eAAvB,gBACA,kBAACC,EAAA,EAAYE,KAAb,CAAkBH,KAAK,eAAvB,aACA,kBAACC,EAAA,EAAYG,QAAb,MACA,kBAACH,EAAA,EAAYE,KAAb,CAAkBH,KAAK,eAAvB,mBAEE,kBAAC,gBAAD,CAAeK,GAAG,SAChB,kBAACP,EAAA,EAAIC,KAAL,KACE,uBAAG7B,UAAU,yBADf,SAIDhD,EACC,kBAAC+E,EAAA,EAAD,CAAaC,MAAOhF,EAAS2C,KAAMS,GAAG,YACpC,kBAAC,gBAAD,CAAe+B,GAAG,YAChB,kBAACJ,EAAA,EAAYE,KAAb,iBAEF,kBAACF,EAAA,EAAYE,KAAb,CAAkBG,QApCZ,WACpB/B,GD+CwB,SAACA,GAC3BnC,aAAamE,WAAW,YACxBhC,EAAS,CACP/E,KJ9D6B,sBIgE/B+E,EAAS,CACP/E,KFpD+B,wBEsDjC+E,EAAS,CACP/E,KJ3D8B,uBI8DhC+E,EAAS,CACP/E,KJrD2B,yBK4Bb,WAKF,kBAAC,gBAAD,CAAe6G,GAAG,UAChB,kBAACP,EAAA,EAAIC,KAAL,KACE,uBAAG7B,UAAU,gBADf,YAKHhD,GAAYA,EAASsF,SACpB,kBAACP,EAAA,EAAD,CAAaC,MAAM,QAAQ5B,GAAG,aAC5B,kBAAC,gBAAD,CAAe+B,GAAG,mBAChB,kBAACJ,EAAA,EAAYE,KAAb,eAEF,kBAAC,gBAAD,CAAeE,GAAG,sBAChB,kBAACJ,EAAA,EAAYE,KAAb,iBAEF,kBAAC,gBAAD,CAAeE,GAAG,oBAChB,kBAACJ,EAAA,EAAYE,KAAb,qBAUhB,yBAAKjC,UAAU,UACR,kBAACuC,EAAA,EAAD,CAAQC,IAA8B,UAAWC,OAAK,O,SC9DlDC,EAjBA,WACb,OACE,gCACE,kBAACnB,EAAA,EAAD,KACE,kBAACoB,EAAA,EAAD,S,iBCHFC,EAAS,SAAC,GAA4B,IAA1B9C,EAAyB,EAAzBA,MAAO+C,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAI7B,OAFEhD,EAASA,GAAQ,GAGjB,yBAAKE,UAAU,UACb,8BACE,uBACE+C,MAAO,CAAED,SACT9C,UACEF,GAAS,EACL,cACAA,GAAgB,0BAI1B,8BACE,uBACEiD,MAAO,CAAED,SACT9C,UACEF,GAAS,EACL,cACAA,GAAgB,0BAI1B,8BACE,uBACEiD,MAAO,CAAED,SACT9C,UACEF,GAAS,EACL,cACAA,GAAS,IACT,uBACA,iBAIV,8BACE,uBACEiD,MAAO,CAAED,SACT9C,UACEF,GAAS,EACL,cACAA,GAAS,IACT,uBACA,iBAIV,8BACE,uBACEiD,MAAO,CAAED,SACT9C,UACEF,GAAS,EACL,cACAA,GAAS,IACT,uBACA,iBAIV,8BAAO+C,GAAQA,KAKrBD,EAAOI,aAAe,CACpBF,MAAO,WAQMF,QCtDAK,EApBC,SAAC,GAAiB,IAAfpH,EAAc,EAAdA,QACjB,OACE,kBAACqH,EAAA,EAAD,CAAMlD,UAAU,iBACd,kBAAC,OAAD,CAAMmC,GAAE,mBAActG,EAAQsH,MAC5B,kBAACD,EAAA,EAAKE,IAAN,CAAUZ,IAAK3G,EAAQwH,MAAMC,MAAM,KAAK,GAAIpD,QAAQ,SAEtD,kBAACgD,EAAA,EAAKK,KAAN,KACE,kBAAC,OAAD,CAAMpB,GAAE,mBAActG,EAAQsH,MAC5B,kBAACD,EAAA,EAAKM,MAAN,CAAYC,GAAG,OACb,gCAAS5H,EAAQ8D,QAKrB,kBAACuD,EAAA,EAAKQ,KAAN,CAAWD,GAAG,MAAd,IAAqB5H,EAAQ8H,U,SChB/BC,EAAU,SAAC,GAAkD,IAAhD1D,EAA+C,EAA/CA,QAAS2D,EAAsC,EAAtCA,SAAsC,IAA5BC,qBAA4B,WACxC9E,oBAAS,GAD+B,mBACzD+E,EADyD,KACnDC,EADmD,KAchE,OAXAC,qBAAU,WACR,IAAMC,EAAYC,OAAOC,YAAW,WAC9BN,IACFE,GAAQ,GACRK,QAAQC,IAAI,YAEb,KAEH,OAAO,kBAAMH,OAAOI,aAAaL,MAChC,IAEIH,EACL,kBAACS,EAAA,EAAD,CAAOtE,QAASA,EAASuE,QAAS,kBAAMT,GAAQ,IAAQU,aAAW,GAChEb,GAGH,IAIJD,EAAQZ,aAAe,CACrB9C,QAAS,QAEI0D,Q,SCXAe,EAhBA,WACb,OACE,kBAACC,EAAA,EAAD,CACEC,UAAU,SACVC,KAAK,SACL/B,MAAO,CACLgC,MAAO,QACPC,OAAQ,QACRC,OAAQ,OACRC,QAAS,UAGX,0BAAMlF,UAAU,c,SCaPmF,EAvBE,SAAC,GAAoD,IAAlD1J,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,KAA0C,IAApC4G,eAAoC,aAAnBrD,eAAmB,MAAT,GAAS,EACnE,OACExD,EAAQ,GACN,kBAAC2J,EAAA,EAAD,KACG,YAAIC,MAAM5J,GAAO6J,QAAQ1I,KAAI,SAACD,GAAD,OAC5B,kBAAC,gBAAD,CACE4I,IAAK5I,EAAI,EACTwF,GACGG,EAAD,6BAI0B3F,EAAI,GAH1BsC,EAAO,kBACMA,EADN,iBACsBtC,EAAI,GAD1B,gBAEIA,EAAI,IAIrB,kBAACyI,EAAA,EAAWnD,KAAZ,CAAiBuD,OAAQ7I,EAAI,IAAMjB,GAAOiB,EAAI,S,QCjBpD8I,EAAO,SAAC,GAAsC,IAApCzD,EAAmC,EAAnCA,MAAO0D,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAClC,OACE,kBAACC,EAAA,EAAD,KACE,+BAAQ5D,GACR,0BAAMrC,KAAK,cAAckG,QAASH,IAClC,0BAAM/F,KAAK,WAAWkG,QAASF,MAIrCF,EAAKzC,aAAe,CAClBhB,MAAO,aACP0D,YAAa,GACbC,SAAU,IAEGF,SCQFK,GAAe,eAAC7G,EAAD,uDAAW,GAAI8G,EAAf,uDAA4B,GAA5B,8CAAmC,WAC7D1F,GAD6D,iBAAAE,EAAA,sEAI3DF,EAAS,CAAE/E,KjB5BqB,yBiBwB2B,SAKpCsF,IAAMC,IAAN,iCACK5B,EADL,uBAC2B8G,IANS,gBAKnDjF,EALmD,EAKnDA,KAIRT,EAAS,CAAE/E,KjBhCqB,uBiBgCOE,QAASsF,IATW,gDAW3DT,EAAS,CACP/E,KjBlC2B,oBiBmC3BE,QACE,KAAMuF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAhB6C,yDAAnC,uDAqBfgF,GAAqB,SAAC5F,GAAD,8CAAQ,WAAOC,GAAP,iBAAAE,EAAA,sEAEtCF,EAAS,CAAE/E,KjB3CwB,4BiByCG,SAIfsF,IAAMC,IAAN,wBAA2BT,IAJZ,gBAI9BU,EAJ8B,EAI9BA,KAERT,EAAS,CAAE/E,KjB9CwB,0BiB8COE,QAASsF,IANb,gDAQtCT,EAAS,CACP/E,KjBhD8B,uBiBiD9BE,QACE,KAAMuF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAbwB,yDAAR,uD,UCFnBiF,GAnCS,WACtB,IAAM5F,EAAWa,cAEX9E,EAAkB+E,aAAY,SAAChG,GAAD,OAAWA,EAAMiB,mBAC7Cb,EAA6Ba,EAA7Bb,QAASI,EAAoBS,EAApBT,MAAOP,EAAagB,EAAbhB,SAMxB,OAJA6I,qBAAU,WACR5D,EDoL2B,uCAAM,WAAOA,GAAP,iBAAAE,EAAA,sEAEjCF,EAAS,CAAE/E,KjB1KoB,wBiBwKE,SAGVsF,IAAMC,IAAN,qBAHU,gBAGzBC,EAHyB,EAGzBA,KAERT,EAAS,CAAE/E,KjB5KoB,sBiB4KOE,QAASsF,IALd,gDAOjCT,EAAS,CACP/E,KjB9K0B,mBiB+K1BE,QACE,KAAMuF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAZmB,yDAAN,yDCnL1B,CAACX,IAEG9E,EACL,kBAAC,EAAD,MACEI,EACF,kBAAC,EAAD,CAASuE,QAAQ,UAAUvE,GAE3B,kBAACuK,GAAA,EAAD,CAAUC,MAAM,eACb/K,EAASgL,OAAS,EACfhL,EAASwB,KAAI,SAACf,GAAD,OACX,kBAACqK,GAAA,EAASjE,KAAV,CAAesD,IAAK1J,EAAQsH,KACxB,kBAAC,OAAD,CAAMhB,GAAE,mBAActG,EAAQsH,MAC5B,kBAACZ,EAAA,EAAD,CAAOC,IAAK3G,EAAQwH,MAAMC,MAAM,KAAK,GAAI+C,IAAKxK,EAAQ8D,KAAM8C,OAAK,IACjE,kBAACyD,GAAA,EAASI,QAAV,CAAkBtG,UAAU,oBAC1B,4BACGnE,EAAQ8D,KADX,MACoB9D,EAAQ8H,MAD5B,WAQV,KCgEK4C,GAzFI,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACdvH,EAAUuH,EAAMC,OAAOxH,QACvB8G,EAAaS,EAAMC,OAAOV,YAAc,EAExC1F,EAAWa,cACXhG,EAAciG,aAAY,SAAChG,GAAD,OAAWA,EAAMD,eACzCK,EAA0CL,EAA1CK,QAASI,EAAiCT,EAAjCS,MAAOP,EAA0BF,EAA1BE,SAAUM,EAAgBR,EAAhBQ,KAAMD,EAAUP,EAAVO,MAOxC,OANA4I,QAAQC,IAAIlJ,GACZ6I,qBAAU,WACR5D,EAASyF,GAAa7G,EAAS8G,MAC9B,CAAC1F,EAAUpB,EAAS8G,IACzB1B,QAAQC,IAAIoC,IACZrC,QAAQC,IAAI,0BAER,oCACE,kBAAC,GAAD,MACErF,EAGA,kBAAC,OAAD,CAAMkD,GAAG,IAAInC,UAAU,iBAAvB,YAFA,kBAAC2G,GAAD,MAODpL,EACC,kBAAC,EAAD,MACEI,EACF,kBAAC,EAAD,CAASuE,QAAQ,UAAUvE,GAE3B,oCAGE,kBAACgH,EAAA,EAAD,KACGvH,EACGA,EAASwB,KAAI,SAACf,EAAS+K,GAAV,OACX,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1B,IAAKqB,GACrC,kBAAC,EAAD,CAAS/K,QAASA,EAAS0J,IAAK1J,EAAQsH,IAAI+D,iBAGhD,IAGN,kBAACvE,EAAA,EAAD,KACE,kBAACkE,EAAA,EAAD,CAAKM,GAAI,EAAGL,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGjH,UAAU,UAClD,kBAAC,OAAD,CAAMmC,GAAE,oBACN,kBAACe,EAAA,EAAKE,IAAN,CACEpD,UAAU,SACVwC,IAAK,oBAIX,kBAACqE,EAAA,EAAD,CAAKM,GAAI,EAAIL,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGjH,UAAU,UACjD,kBAAC,OAAD,CAAMmC,GAAE,oBACN,kBAACe,EAAA,EAAKE,IAAN,CACEpD,UAAU,SACVwC,IAAI,qBAKV,kBAACG,EAAA,EAAD,KACE,kBAACkE,EAAA,EAAD,CAAKM,GAAI,EAAGL,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGjH,UAAU,UAClD,kBAAC,OAAD,CAAMmC,GAAE,oBACN,kBAACe,EAAA,EAAKE,IAAN,CACEpD,UAAU,SACVwC,IAAK,oBAIX,kBAACqE,EAAA,EAAD,CAAKM,GAAI,EAAIL,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGjH,UAAU,UACjD,kBAAC,OAAD,CAAMmC,GAAE,oBACN,kBAACe,EAAA,EAAKE,IAAN,CACEpD,UAAU,SACVwC,IAAI,qBAKV,kBAAC,EAAD,CACE/G,MAAOA,EACPC,KAAMA,EACNuD,QAASA,GAAoB,Q,4BCpC1BmI,GAtDG,SAACC,GACjB,IAAIvG,EAAO,GACPwG,EAAW,GAmBXD,EAAOA,SACeA,EAAOA,OAAOE,UAAU,EAAGF,EAAOA,OAAOjB,OAAS,GACpC9C,MAAM,KAChCkE,SAAQ,SAACC,GACnB,IAAIC,EAAQ,GACZrD,QAAQC,IAAI,WACZoD,EAAK,MAAYD,EACjBC,EAAK,KAAW,GAEhBJ,EAAS9H,KAAKkI,MAEhB5G,EAAOwG,GAGT,OADAjD,QAAQC,IAAIgD,GAEV,oCACGA,EAASlB,OAAS,EACjB,kBAAC,KAAD,CACEtF,KAAMA,EACNiE,MAAM,OACN4C,iBAAiB,EACjBC,UAAU,UAGZ,KCsHOC,GA/IO,SAAC,GAAwB,IAAtB9I,EAAqB,EAArBA,QAASyH,EAAY,EAAZA,MAAY,EACtBxH,mBAAS,GADa,mBACrC8I,EADqC,KAChCC,EADgC,OAEhB/I,mBAAS,GAFO,mBAE7BgJ,GAF6B,aAGdhJ,mBAAS,IAHK,mBAG5BiJ,GAH4B,WAKtC5H,EAAWa,cAEXgH,EAAiB/G,aAAY,SAAChG,GAAD,OAAWA,EAAMS,kBAC5CL,EAA4B2M,EAA5B3M,QAASI,EAAmBuM,EAAnBvM,MAAOE,EAAYqM,EAAZrM,QAKlBM,GAHYgF,aAAY,SAAChG,GAAD,OAAWA,EAAM4B,aACvCC,SAEoBmE,aAAY,SAAChG,GAAD,OAAWA,EAAMgB,wBAE9CgM,EAEPhM,EAFFH,QAEEG,EADFR,MAGFsI,qBAAU,WACJkE,IACFC,MAAM,oBACNJ,EAAU,GACVC,EAAW,IACX5H,EAAS,CAAE/E,KrBvB0B,iCqB2BvC+E,EAAS2F,GAAmBQ,EAAMC,OAAOrG,OACxC,CAACC,EAAUmG,EAAO2B,IAYrB,OACE,oCACE,kBAAC,OAAD,CAAMnI,UAAU,qBAAqBmC,GAAG,KAAxC,YAIC5G,EACC,kBAAC,EAAD,MACEI,EACF,kBAAC,EAAD,CAASuE,QAAQ,SAAS4D,cAAc,SACrCnI,GAGH,oCACE,kBAAC,GAAD,CAAMqG,MAAOnG,EAAQ8D,OACrB,kBAACgD,EAAA,EAAD,KACE,kBAACkE,EAAA,EAAD,CAAKE,GAAI,GACP,kBAAC,GAAD,CAAWM,OAAQxL,EAAQwH,SAG3B,kBAACwD,EAAA,EAAD,CAAKE,GAAI,GACT,kBAACpE,EAAA,EAAD,KACE,kBAACkE,EAAA,EAAD,CAAME,GAAI,GACR,kBAACsB,GAAA,EAAD,CAAWnI,QAAQ,SACnB,kBAACmI,GAAA,EAAUpG,KAAX,KACA,4BAAKpG,EAAQ8D,OAEb,kBAAC0I,GAAA,EAAUpG,KAAX,KACA,kBAAC,EAAD,CACAnC,MAAOjE,EAAQyM,OACfzF,KAAI,UAAKhH,EAAQ0M,WAAb,kBAIJ,kBAACF,GAAA,EAAUpG,KAAX,gBAAyBpG,EAAQ8H,OACjC,kBAAC0E,GAAA,EAAUpG,KAAX,uBACapG,EAAQ2M,eAIvB,kBAAC3B,EAAA,EAAD,CAAKE,GAAI,GACT,kBAAC7D,EAAA,EAAD,KACA,kBAACmF,GAAA,EAAD,KACA,kBAACA,GAAA,EAAUpG,KAAX,KACA,kBAACU,EAAA,EAAD,KACA,kBAACkE,EAAA,EAAD,iBACA,kBAACA,EAAA,EAAD,KACA,qCAAWhL,EAAQ8H,UAInB,kBAAC0E,GAAA,EAAUpG,KAAX,KACA,kBAACU,EAAA,EAAD,KACA,kBAACkE,EAAA,EAAD,qBACA,kBAACA,EAAA,EAAD,KACChL,EAAQ4M,WAAa,EACpB,aACA,yBAID5M,EAAQ4M,WAAa,GACtB,kBAACC,GAAA,EAAD,KACA,kBAAC/F,EAAA,EAAD,KACA,kBAACkE,EAAA,EAAD,UACA,kBAACA,EAAA,EAAD,KACA,kBAAC1H,EAAA,EAAKO,QAAN,CAAc+D,GAAG,SAAS3D,MAAOgI,EAAKlI,SAAU,SAACP,GAAD,OAAO0I,EAAO1I,EAAEQ,OAAOC,SACtE,YAAIuF,MAAMxJ,EAAQ8M,cAAcrD,QAAQ1I,KACzC,SAACD,GAAD,OACA,4BAAQ4I,IAAK5I,EAAI,EAAGmD,MAAOnD,EAAI,GAA/B,IAAoCA,EAAI,EAAxC,iBAcH,kBAACgG,EAAA,EAAD,CAAM3C,UAAU,SACX,kBAAC6G,EAAA,EAAD,KACA,kBAAC5G,EAAA,EAAD,CAAQmC,QA/FC,WACvBrD,EAAQS,KAAR,gBAAsBgH,EAAMC,OAAOrG,GAAnC,gBAA6C0H,KA8FI9H,UAAU,YAAY1E,KAAK,SAASsN,SAAmC,IAAzB/M,EAAQ8M,cAAzF,sBC7ILE,GAAY,SAACzI,EAAI0H,GAAL,8CAAa,WAAOzH,EAAUC,GAAjB,iBAAAC,EAAA,sEACbK,IAAMC,IAAN,wBAA2BT,IADd,gBAC5BU,EAD4B,EAC5BA,KAERT,EAAS,CACP/E,KpBbyB,gBoBczBE,QAAS,CACPK,QAASiF,EAAKqC,IACdxD,KAAMmB,EAAKnB,KACX0D,MAAOvC,EAAKuC,MACZM,MAAO7C,EAAK6C,MACZgF,aAAc7H,EAAK6H,aACnBb,SAIJ5J,aAAa4K,QAAQ,YAAa1K,KAAK2K,UAAUzI,IAAWjE,KAAKC,YAf7B,2CAAb,yDC2GV0M,GA7GI,SAAC,GAAkC,IAAhCxC,EAA+B,EAA/BA,MAAOyC,EAAwB,EAAxBA,SAAUlK,EAAc,EAAdA,QAC/BmK,EAAY1C,EAAMC,OAAOrG,GACzB0H,EAAMmB,EAASE,OAASC,OAAOH,EAASE,OAAO7F,MAAM,KAAK,IAAM,EAEhEjD,EAAWa,cAET5E,EADK6E,aAAY,SAAChG,GAAD,OAAWA,EAAMkB,QAClCC,UAER2H,qBAAU,WACJiF,GACF7I,EAASwI,GAAUK,EAAWpB,MAE/B,CAACzH,EAAU6I,EAAWpB,IAEzB,IAAMuB,EAAwB,SAACjJ,GAC7BC,EDK0B,SAACD,GAAD,OAAQ,SAACC,EAAUC,GAC/CD,EAAS,CACP/E,KpB5B4B,mBoB6B5BE,QAAS4E,IAEXlC,aAAa4K,QAAQ,YAAa1K,KAAK2K,UAAUzI,IAAWjE,KAAKC,aCVtDgN,CAAelJ,KAM1B,OACE,kBAACuC,EAAA,EAAD,KACE,kBAACkE,EAAA,EAAD,CAAKE,GAAI,GACP,6CACsB,IAArBzK,EAAU8J,OACT,kBAAC,EAAD,0BACoB,kBAAC,OAAD,CAAMjE,GAAG,KAAT,YAA6B,KAGjD,kBAACkG,GAAA,EAAD,CAAWnI,QAAQ,SAChB5D,EAAUM,KAAI,SAACJ,GAAD,OACb,kBAAC6L,GAAA,EAAUpG,KAAX,CAAgBsD,IAAK/I,EAAKX,SACxB,kBAAC8G,EAAA,EAAD,KACE,kBAACkE,EAAA,EAAD,CAAKE,GAAI,GACP,kBAACxE,EAAA,EAAD,CACEC,IAAKhG,EAAK6G,MACVgD,IAAK7J,EAAKmD,KACV8C,OAAK,EACL8G,SAAO,KAGX,kBAAC1C,EAAA,EAAD,CAAKE,GAAI,GACP,kBAAC,OAAD,CAAM5E,GAAE,mBAAc3F,EAAKgN,WAAahN,EAAKmD,OAE/C,kBAACkH,EAAA,EAAD,CAAKE,GAAI,GAAT,IAAcvK,EAAKmH,OACnB,kBAACkD,EAAA,EAAD,CAAKE,GAAI,GACN,IACD,kBAAC5H,EAAA,EAAKO,QAAN,CACE+D,GAAG,SACH3D,MAAOtD,EAAKsL,IACZlI,SAAU,SAACP,GAAD,OACRgB,EACEwI,GAAUrM,EAAKX,QAASuN,OAAO/J,EAAEQ,OAAOC,WAI3C,YAAIuF,MAAM7I,EAAKmM,cAAcrD,QAAQ1I,KAAI,SAACD,GAAD,OACxC,4BAAQ4I,IAAK5I,EAAI,EAAGmD,MAAOnD,EAAI,GAC5BA,EAAI,QAKb,kBAACkK,EAAA,EAAD,CAAKE,GAAI,GACP,kBAAC9G,EAAA,EAAD,CACE3E,KAAK,SACL4E,QAAQ,QACRkC,QAAS,kBAAMiH,EAAsB7M,EAAKX,WAE1C,uBAAGmE,UAAU,0BAS7B,kBAAC6G,EAAA,EAAD,CAAKE,GAAI,GACP,kBAAC7D,EAAA,EAAD,KACE,kBAACmF,GAAA,EAAD,KACE,kBAACA,GAAA,EAAUpG,KAAX,KACE,yCACa3F,EAAUmN,QAAO,SAACC,EAAKlN,GAAN,OAAekN,EAAMlN,EAAKsL,MAAK,GAD7D,WADF,IAMGxL,EACEmN,QAAO,SAACC,EAAKlN,GAAN,OAAekN,EAAMlN,EAAKsL,IAAMtL,EAAKmH,QAAO,GACnDgG,QAAQ,IAEb,kBAACtB,GAAA,EAAUpG,KAAX,KACE,kBAAChC,EAAA,EAAD,CACE3E,KAAK,SACL0E,UAAU,YACV4I,SAA+B,IAArBtM,EAAU8J,OACpBhE,QA/EU,WACtBrD,EAAQS,KAAK,8BA0EH,6BCrFCoK,GAZO,SAAC,GAAkB,IAAhB/F,EAAe,EAAfA,SACvB,OACE,kBAACtC,EAAA,EAAD,KACE,kBAACoB,EAAA,EAAD,CAAK3C,UAAU,6BACb,kBAAC6G,EAAA,EAAD,CAAKM,GAAI,GAAIJ,GAAI,GACdlD,MCiEIgG,GAhEK,SAAC,GAA2B,IAAzBZ,EAAwB,EAAxBA,SAAUlK,EAAc,EAAdA,QAAc,EACnBC,mBAAS,IADU,mBACtC8K,EADsC,KAC/BC,EAD+B,OAEb/K,mBAAS,IAFI,mBAEtCgL,EAFsC,KAE5BC,EAF4B,KAGvC5J,EAAWa,cAEXnE,EAAYoE,aAAY,SAAChG,GAAD,OAAWA,EAAM4B,aACvCxB,EAA6BwB,EAA7BxB,QAASI,EAAoBoB,EAApBpB,MAAOqB,EAAaD,EAAbC,SAClBkN,EAAWjB,EAASE,OAASF,EAASE,OAAO7F,MAAM,KAAK,GAAK,IAEnEW,qBAAU,WACJjH,GACF+B,EAAQS,KAAK0K,KAEd,CAACnL,EAAS/B,EAAUkN,IAOvB,OACE,kBAAC,GAAD,KACE,uCACCvO,GACC,kBAAC,EAAD,CAASuE,QAAQ,SAAS4D,cAAc,QACrCnI,GAGJJ,GAAW,kBAAC,EAAD,MACZ,kBAAC4D,EAAA,EAAD,CAAMC,SAdY,SAACC,GACrBA,EAAEC,iBAEFe,EjBEiB,SAACyJ,EAAOE,GAAR,8CAAqB,WAAO3J,GAAP,mBAAAE,EAAA,sEAEtCF,EAAS,CACP/E,KJhC4B,uBImCxBkF,EAAS,CACbC,QAAS,CACP,eAAgB,qBARkB,SAYfG,IAAMuJ,KAC3B,mBACA,CAAEL,QAAOE,YACTxJ,GAfoC,gBAY9BM,EAZ8B,EAY9BA,KAKRT,EAAS,CACP/E,KJ9C4B,qBI+C5BE,QAASsF,IAEX5C,aAAa4K,QAAQ,WAAY1K,KAAK2K,UAAUjI,IArBV,kDAuBtCT,EAAS,CACP/E,KJnDyB,kBIoDzBE,QACE,KAAMuF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA5BwB,0DAArB,sDiBFRoJ,CAAMN,EAAOE,MAYlB,kBAAC7K,EAAA,EAAKkL,MAAN,CAAYC,UAAU,SACpB,kBAACnL,EAAA,EAAKoL,MAAN,qBACA,kBAACpL,EAAA,EAAKO,QAAN,CACEpE,KAAK,QACLyE,YAAY,cACZD,MAAOgK,EACPlK,SAAU,SAACP,GAAD,OAAO0K,EAAS1K,EAAEQ,OAAOC,WAGvC,kBAACX,EAAA,EAAKkL,MAAN,CAAYC,UAAU,YACpB,kBAACnL,EAAA,EAAKoL,MAAN,iBACA,kBAACpL,EAAA,EAAKO,QAAN,CACEpE,KAAK,WACLyE,YAAY,iBACZD,MAAOkK,EACPpK,SAAU,SAACP,GAAD,OAAO4K,EAAY5K,EAAEQ,OAAOC,WAG1C,kBAACG,EAAA,EAAD,CAAQ3E,KAAK,SAAS4E,QAAQ,WAA9B,YAIF,kBAACyC,EAAA,EAAD,CAAK3C,UAAU,QACb,kBAAC6G,EAAA,EAAD,qBACgB,IACd,kBAAC,OAAD,CAAM1E,GAAI+H,EAAQ,6BAAyBA,GAAa,aAAxD,gBCgCKM,GAvFQ,SAAC,GAA2B,IAAzBvB,EAAwB,EAAxBA,SAAUlK,EAAc,EAAdA,QAAc,EACxBC,mBAAS,IADe,mBACzCW,EADyC,KACnC8K,EADmC,OAEtBzL,mBAAS,IAFa,mBAEzC8K,EAFyC,KAElCC,EAFkC,OAGhB/K,mBAAS,IAHO,mBAGzCgL,EAHyC,KAG/BC,EAH+B,OAIFjL,mBAAS,IAJP,mBAIzC0L,EAJyC,KAIxBC,EAJwB,OAKlB3L,mBAAS,MALS,mBAKzCgC,EALyC,KAKhC4J,EALgC,KAO1CvK,EAAWa,cAEXjE,EAAekE,aAAY,SAAChG,GAAD,OAAWA,EAAM8B,gBAC1C1B,EAA6B0B,EAA7B1B,QAASI,EAAoBsB,EAApBtB,MAAOqB,EAAaC,EAAbD,SAClBkN,EAAWjB,EAASE,OAASF,EAASE,OAAO7F,MAAM,KAAK,GAAK,IAEnEW,qBAAU,WACJjH,GACF+B,EAAQS,KAAK0K,KAEd,CAACnL,EAAS/B,EAAUkN,IAUvB,OACE,kBAAC,GAAD,KACE,uCACClJ,GAAW,kBAAC,EAAD,CAASd,QAAQ,UAAUc,GACtCrF,GAAS,kBAAC,EAAD,CAASuE,QAAQ,UAAUvE,GACpCJ,GAAW,kBAAC,EAAD,MACZ,kBAAC4D,EAAA,EAAD,CAAMC,SAdY,SAACC,GACrBA,EAAEC,iBACE0K,IAAaU,EACfE,EAAW,0BAEXvK,ElB6CkB,SAACV,EAAMmK,EAAOE,GAAd,8CAA2B,WAAO3J,GAAP,mBAAAE,EAAA,sEAE/CF,EAAS,CACP/E,KJ5E+B,0BI+E3BkF,EAAS,CACbC,QAAS,CACP,eAAgB,qBAR2B,SAYxBG,IAAMuJ,KAC3B,aACA,CAAExK,OAAMmK,QAAOE,YACfxJ,GAf6C,gBAYvCM,EAZuC,EAYvCA,KAMRT,EAAS,CACP/E,KJ3F+B,wBI4F/BE,QAASsF,IAEXT,EAAS,CACP/E,KJpG4B,qBIqG5BE,QAASsF,IAEX5C,aAAa4K,QAAQ,WAAY1K,KAAK2K,UAAUjI,IA1BD,kDA4B/CT,EAAS,CACP/E,KJpG4B,qBIqG5BE,QACE,KAAMuF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAjCiC,0DAA3B,sDkB7CT6J,CAASlL,EAAMmK,EAAOE,MAU7B,kBAAC7K,EAAA,EAAKkL,MAAN,CAAYC,UAAU,QACpB,kBAACnL,EAAA,EAAKoL,MAAN,aACA,kBAACpL,EAAA,EAAKO,QAAN,CACEpE,KAAK,OACLyE,YAAY,aACZD,MAAOH,EACPC,SAAU,SAACP,GAAD,OAAOoL,EAAQpL,EAAEQ,OAAOC,WAGtC,kBAACX,EAAA,EAAKkL,MAAN,CAAYC,UAAU,SACpB,kBAACnL,EAAA,EAAKoL,MAAN,qBACA,kBAACpL,EAAA,EAAKO,QAAN,CACEpE,KAAK,QACLyE,YAAY,cACZD,MAAOgK,EACPlK,SAAU,SAACP,GAAD,OAAO0K,EAAS1K,EAAEQ,OAAOC,WAIvC,kBAACX,EAAA,EAAKkL,MAAN,CAAYC,UAAU,YACpB,kBAACnL,EAAA,EAAKoL,MAAN,iBACA,kBAACpL,EAAA,EAAKO,QAAN,CACEpE,KAAK,WACLyE,YAAY,iBACZD,MAAOkK,EACPpK,SAAU,SAACP,GAAD,OAAO4K,EAAY5K,EAAEQ,OAAOC,WAG1C,kBAACX,EAAA,EAAKkL,MAAN,CAAYC,UAAU,mBACpB,kBAACnL,EAAA,EAAKoL,MAAN,yBACA,kBAACpL,EAAA,EAAKO,QAAN,CACEpE,KAAK,WACLyE,YAAY,wBACZD,MAAO4K,EACP9K,SAAU,SAACP,GAAD,OAAOsL,EAAmBtL,EAAEQ,OAAOC,WAGjD,kBAACG,EAAA,EAAD,CAAQ3E,KAAK,SAAS4E,QAAQ,WAA9B,aAIF,kBAACyC,EAAA,EAAD,CAAK3C,UAAU,QACb,kBAAC6G,EAAA,EAAD,wBACmB,IACjB,kBAAC,OAAD,CAAM1E,GAAI+H,EAAQ,0BAAsBA,GAAa,UAArD,a,UCyEKY,GAtJO,SAAC,GAA0B,EAAxB7B,SAAyB,IAAflK,EAAc,EAAdA,QAAc,EACvBC,mBAAS,IADc,mBACxCW,EADwC,KAClC8K,EADkC,OAErBzL,mBAAS,IAFY,mBAExC8K,EAFwC,KAEjCC,EAFiC,OAGf/K,mBAAS,IAHM,mBAGxCgL,EAHwC,KAG9BC,EAH8B,OAIDjL,mBAAS,IAJR,mBAIxC0L,EAJwC,KAIvBC,EAJuB,OAKjB3L,mBAAS,MALQ,mBAKxCgC,EALwC,KAK/B4J,EAL+B,KAOzCvK,EAAWa,cAEXhE,EAAciE,aAAY,SAAChG,GAAD,OAAWA,EAAM+B,eACzC3B,EAAyB2B,EAAzB3B,QAASI,EAAgBuB,EAAhBvB,MAAOwB,EAASD,EAATC,KAGhBH,EADUmE,aAAY,SAAChG,GAAD,OAAWA,EAAM4B,aACvCC,SAGAhB,EADkBmF,aAAY,SAAChG,GAAD,OAAWA,EAAMiC,qBAC/CpB,QAEF6B,EAAcsD,aAAY,SAAChG,GAAD,OAAWA,EAAM0C,eAChCkN,EAA8ClN,EAAvDtC,QAA+ByP,EAAwBnN,EAA/BlC,MAAoBmC,EAAWD,EAAXC,OAEpDmG,qBAAU,WACHjH,EAGEG,GAASA,EAAKwC,OAAQ3D,GAKzByO,EAAQtN,EAAKwC,MACboK,EAAS5M,EAAK2M,SALdzJ,EAAS,CAAE/E,KvBnBsB,8BuBoBjC+E,EAASF,EAAe,YACxBE,ECyHoB,uCAA4B,WACtDA,EACAC,GAFsD,uBAAAC,EAAA,sEAKpDF,EAAS,CACP/E,KtBxJ+B,0BsBkJmB,EAUhDgF,IADWtD,EATqC,EASlDD,UAAaC,SAETwD,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAY1D,EAAS2D,SAbc,SAiB7BC,IAAMC,IAAN,uBAAkCL,GAjBL,gBAiB5CM,EAjB4C,EAiB5CA,KAERT,EAAS,CACP/E,KtBrK+B,wBsBsK/BE,QAASsF,IArByC,kDAwBpDT,EAAS,CACP/E,KtBzK4B,qBsB0K5BE,QACE,KAAMuF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA7BsC,0DAA5B,0DD9HtBjC,EAAQS,KAAK,YAWd,CAACa,EAAUtB,EAAS/B,EAAUG,EAAMnB,IAUvC,OACE,kBAAC2G,EAAA,EAAD,KACE,kBAACkE,EAAA,EAAD,CAAKE,GAAI,GACP,4CACC/F,GAAW,kBAAC,EAAD,CAASd,QAAQ,UAAUc,GACtCrF,GAAS,kBAAC,EAAD,CAASuE,QAAQ,UAAUvE,GACpCK,GAAW,kBAAC,EAAD,CAASkE,QAAQ,WAAjB,mBACX3E,GAAW,kBAAC,EAAD,MACZ,kBAAC4D,EAAA,EAAD,CAAMC,SAhBU,SAACC,GACrBA,EAAEC,iBACE0K,IAAaU,EACfE,EAAW,0BAEXvK,EnBiG2B,SAAClD,GAAD,8CAAU,WAAOkD,EAAUC,GAAjB,uBAAAC,EAAA,sEAEvCF,EAAS,CACP/E,KJzIqC,gCIsIA,EAOnCgF,IADWtD,EANwB,EAMrCD,UAAaC,SAETwD,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1D,EAAS2D,SAXC,SAehBC,IAAMqK,IAAN,qBAAgC9N,EAAMqD,GAftB,gBAe/BM,EAf+B,EAe/BA,KAERT,EAAS,CACP/E,KJvJqC,8BIwJrCE,QAASsF,IAEXT,EAAS,CACP/E,KJzK4B,qBI0K5BE,QAASsF,IAEX5C,aAAa4K,QAAQ,WAAY1K,KAAK2K,UAAUjI,IAzBT,kDA2BvCT,EAAS,CACP/E,KJhKkC,2BIiKlCE,QACE,KAAMuF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAhCyB,0DAAV,wDmBjGlBkK,CAAkB,CAAE9K,GAAIjD,EAAKgG,IAAKxD,OAAMmK,QAAOE,gBAYpD,kBAAC7K,EAAA,EAAKkL,MAAN,CAAYC,UAAU,QACpB,kBAACnL,EAAA,EAAKoL,MAAN,aACA,kBAACpL,EAAA,EAAKO,QAAN,CACEpE,KAAK,OACLyE,YAAY,aACZD,MAAOH,EACPC,SAAU,SAACP,GAAD,OAAOoL,EAAQpL,EAAEQ,OAAOC,WAGtC,kBAACX,EAAA,EAAKkL,MAAN,CAAYC,UAAU,SACpB,kBAACnL,EAAA,EAAKoL,MAAN,qBACA,kBAACpL,EAAA,EAAKO,QAAN,CACEpE,KAAK,QACLyE,YAAY,cACZD,MAAOgK,EACPlK,SAAU,SAACP,GAAD,OAAO0K,EAAS1K,EAAEQ,OAAOC,WAIvC,kBAACX,EAAA,EAAKkL,MAAN,CAAYC,UAAU,YACpB,kBAACnL,EAAA,EAAKoL,MAAN,iBACA,kBAACpL,EAAA,EAAKO,QAAN,CACEpE,KAAK,WACLyE,YAAY,iBACZD,MAAOkK,EACPpK,SAAU,SAACP,GAAD,OAAO4K,EAAY5K,EAAEQ,OAAOC,WAG1C,kBAACX,EAAA,EAAKkL,MAAN,CAAYC,UAAU,mBACpB,kBAACnL,EAAA,EAAKoL,MAAN,yBACA,kBAACpL,EAAA,EAAKO,QAAN,CACEpE,KAAK,WACLyE,YAAY,wBACZD,MAAO4K,EACP9K,SAAU,SAACP,GAAD,OAAOsL,EAAmBtL,EAAEQ,OAAOC,WAGjD,kBAACG,EAAA,EAAD,CAAQ3E,KAAK,SAAS4E,QAAQ,WAA9B,YAKJ,kBAAC2G,EAAA,EAAD,CAAKE,GAAI,GACP,yCACCgE,EACC,kBAAC,EAAD,MACEC,EACF,kBAAC,EAAD,CAAS9K,QAAQ,UAAU8K,GAE3B,kBAACG,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAACvL,UAAU,YACjD,+BACE,4BACE,kCACA,oCACA,qCACA,oCACA,yCACA,+BAGJ,+BACGlC,EAAOlB,KAAI,SAACc,GAAD,OACV,wBAAI6H,IAAK7H,EAAMyF,KACb,4BAAKzF,EAAMyF,KACX,4BAAKzF,EAAM8N,UAAUjE,UAAU,EAAG,KAClC,4BAAK7J,EAAM+N,YACX,4BACG/N,EAAMgO,OACLhO,EAAMiO,OAAOpE,UAAU,EAAG,IAE1B,uBAAGvH,UAAU,eAAe+C,MAAO,CAAED,MAAO,UAGhD,4BACGpF,EAAMkO,YACLlO,EAAMmO,YAAYtE,UAAU,EAAG,IAE/B,uBAAGvH,UAAU,eAAe+C,MAAO,CAAED,MAAO,UAGhD,4BACE,kBAAC,gBAAD,CAAeX,GAAE,iBAAYzE,EAAMyF,MACjC,kBAAClD,EAAA,EAAD,CAAQD,UAAU,SAASE,QAAQ,SAAnC,sBEnGP4L,GA3CO,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC5C,OACE,kBAACtK,EAAA,EAAD,CAAK5B,UAAU,+BACb,kBAAC4B,EAAA,EAAIK,KAAL,KACG8J,EACC,kBAAC,gBAAD,CAAe5J,GAAG,UAChB,kBAACP,EAAA,EAAIC,KAAL,iBAGF,kBAACD,EAAA,EAAIC,KAAL,CAAU+G,UAAQ,GAAlB,YAGJ,kBAAChH,EAAA,EAAIK,KAAL,KACG+J,EACC,kBAAC,gBAAD,CAAe7J,GAAG,aAChB,kBAACP,EAAA,EAAIC,KAAL,kBAGF,kBAACD,EAAA,EAAIC,KAAL,CAAU+G,UAAQ,GAAlB,aAGJ,kBAAChH,EAAA,EAAIK,KAAL,KACGgK,EACC,kBAAC,gBAAD,CAAe9J,GAAG,YAChB,kBAACP,EAAA,EAAIC,KAAL,iBAGF,kBAACD,EAAA,EAAIC,KAAL,CAAU+G,UAAQ,GAAlB,YAGJ,kBAAChH,EAAA,EAAIK,KAAL,KACGiK,EACC,kBAAC,gBAAD,CAAe/J,GAAG,eAChB,kBAACP,EAAA,EAAIC,KAAL,qBAGF,kBAACD,EAAA,EAAIC,KAAL,CAAU+G,UAAQ,GAAlB,kBCsCKuD,GApEQ,SAAC,GAAiB,IAAfpN,EAAc,EAAdA,QAEhBxC,EADK4E,aAAY,SAAChG,GAAD,OAAWA,EAAMkB,QAClCE,gBAF8B,EAIRyC,mBAASzC,EAAgB6P,SAJjB,mBAI/BA,EAJ+B,KAItBC,EAJsB,OAKdrN,mBAASzC,EAAgB+P,MALX,mBAK/BA,EAL+B,KAKzBC,EALyB,OAMFvN,mBAASzC,EAAgBiQ,YANvB,mBAM/BA,EAN+B,KAMnBC,EANmB,OAORzN,mBAASzC,EAAgBmQ,SAPjB,mBAO/BA,EAP+B,KAOtBC,EAPsB,KAShCtM,EAAWa,cAMjB,OACE,kBAAC,GAAD,KACE,wCACA,kBAAC,GAAD,CAAe6K,OAAK,EAACC,OAAK,IAC1B,kBAAC7M,EAAA,EAAD,CAAMC,SATY,SAACC,GRgBU,IAACyB,EQfhCzB,EAAEC,iBACFe,GRcgCS,EQdH,CAAEsL,UAASE,OAAME,aAAYE,WRcjB,SAACrM,GAC5CA,EAAS,CACP/E,KpBnCsC,6BoBoCtCE,QAASsF,IAEX5C,aAAa4K,QAAQ,kBAAmB1K,KAAK2K,UAAUjI,OQlBrD/B,EAAQS,KAAK,cAOT,kBAACL,EAAA,EAAKkL,MAAN,CAAYC,UAAU,QACpB,kBAACnL,EAAA,EAAKoL,MAAN,gBACA,kBAACpL,EAAA,EAAKO,QAAN,CACEpE,KAAK,OACLyE,YAAY,gBACZD,MAAOsM,EACPQ,UAAQ,EACRhN,SAAU,SAACP,GAAD,OAAOgN,EAAWhN,EAAEQ,OAAOC,WAGzC,kBAACX,EAAA,EAAKkL,MAAN,CAAYC,UAAU,QACpB,kBAACnL,EAAA,EAAKoL,MAAN,aACA,kBAACpL,EAAA,EAAKO,QAAN,CACEpE,KAAK,OACLyE,YAAY,aACZD,MAAOwM,EACPM,UAAQ,EACRhN,SAAU,SAACP,GAAD,OAAOkN,EAAQlN,EAAEQ,OAAOC,WAGtC,kBAACX,EAAA,EAAKkL,MAAN,CAAYC,UAAU,QACpB,kBAACnL,EAAA,EAAKoL,MAAN,oBACA,kBAACpL,EAAA,EAAKO,QAAN,CACEpE,KAAK,OACLyE,YAAY,oBACZD,MAAO0M,EACPI,UAAQ,EACRhN,SAAU,SAACP,GAAD,OAAOoN,EAAcpN,EAAEQ,OAAOC,WAG5C,kBAACX,EAAA,EAAKkL,MAAN,CAAYC,UAAU,QACpB,kBAACnL,EAAA,EAAKoL,MAAN,gBACA,kBAACpL,EAAA,EAAKO,QAAN,CACEpE,KAAK,OACLyE,YAAY,gBACZD,MAAO4M,EACPE,UAAQ,EACRhN,SAAU,SAACP,GAAD,OAAOsN,EAAWtN,EAAEQ,OAAOC,WAGzC,kBAACG,EAAA,EAAD,CAAQ3E,KAAK,SAAS4E,QAAQ,WAA9B,eCTO2M,GApDO,SAAC,GAAiB,IAAf9N,EAAc,EAAdA,QACVoC,aAAY,SAAChG,GAAD,OAAWA,EAAMkB,QAClCE,iBAGNwC,EAAQS,KAAK,aALsB,MAQKR,mBAAS,UARd,mBAQ9BlC,EAR8B,KAQfgQ,EARe,KAU/BzM,EAAWa,cAMjB,OACE,kBAAC,GAAD,KACE,8CACA,kBAAC,GAAD,CAAe+K,OAAK,IACpB,kBAAC9M,EAAA,EAAD,CAAMC,SATY,SAACC,GTuBQ,IAACyB,EStB9BzB,EAAEC,iBACFe,GTqB8BS,ESrBHhE,ETqBY,SAACuD,GAC1CA,EAAS,CACP/E,KpBzCoC,2BoB0CpCE,QAASsF,IAEX5C,aAAa4K,QAAQ,gBAAiB1K,KAAK2K,UAAUjI,OSzBnD/B,EAAQS,KAAK,iBAOT,kBAACL,EAAA,EAAKkL,MAAN,KACE,kBAAClL,EAAA,EAAKoL,MAAN,CAAY9G,GAAG,UAAf,iBAEA,kBAACoD,EAAA,EAAD,KACE,kBAAC1H,EAAA,EAAK4N,MAAN,CACEzR,KAAK,QACL0R,MAAM,wBACN5M,GAAG,SACHT,KAAK,gBACLG,MAAM,SACNmN,SAAO,EACPrN,SAAU,SAACP,GAAD,OAAOyN,EAAiBzN,EAAEQ,OAAOC,YAYjD,kBAACG,EAAA,EAAD,CAAQ3E,KAAK,SAAS4E,QAAQ,WAA9B,eC2GOgN,GAtJU,SAAC,GAAiB,IAAfnO,EAAc,EAAdA,QACpBsB,EAAWa,cACX7E,EAAO8E,aAAY,SAAChG,GAAD,OAAWA,EAAMkB,QAGpC8Q,EAAc,SAACC,GACnB,OAAQC,KAAKC,MAAY,IAANF,GAAa,KAAKzD,QAAQ,IAG/CtN,EAAKkR,WAAaJ,EAChB9Q,EAAKC,UACFmN,QAAO,SAACC,EAAKlN,GAAN,OAAgBkN,EAAMlN,EAAKmH,OAASnH,EAAKsL,MAAK,GACrD6B,QAAQ,IAEbtN,EAAKmR,cAAgBL,EAAY9Q,EAAKkR,WAAa,IAAM,EAAI,KAE7DlR,EAAKoR,SAAWN,EAAY/D,QAAQ,IAAO/M,EAAKkR,YAAY5D,QAAQ,KAEpEtN,EAAKoP,YACHrC,OAAO/M,EAAKkR,YACZnE,OAAO/M,EAAKmR,eACZpE,OAAO/M,EAAKoR,WACZ9D,QAAQ,GACV,IAAMlM,EAAc0D,aAAY,SAAChG,GAAD,OAAWA,EAAMsC,eACzCC,EAA0BD,EAA1BC,MAAO1B,EAAmByB,EAAnBzB,QAASL,EAAU8B,EAAV9B,MAExBsI,qBAAU,WACJjI,GACF+C,EAAQS,KAAR,iBAAuB9B,EAAMyF,QAG9B,CAACpE,EAAS/C,IAeb,OACE,oCACE,kBAAC,GAAD,CAAe+P,OAAK,EAACC,OAAK,EAACC,OAAK,EAACC,OAAK,IACtC,kBAACvJ,EAAA,EAAD,KACE,kBAACkE,EAAA,EAAD,CAAKE,GAAI,GACP,kBAACsB,GAAA,EAAD,CAAWnI,QAAQ,SACjB,kBAACmI,GAAA,EAAUpG,KAAX,KACE,wCACA,2BACE,2CACC5F,EAAKE,gBAAgB6P,QAFxB,MAEoC/P,EAAKE,gBAAgB+P,KAFzD,IAEgE,IAC7DjQ,EAAKE,gBAAgBmR,WAHxB,KAGsC,IACnCrR,EAAKE,gBAAgBmQ,UAG1B,kBAACrE,GAAA,EAAUpG,KAAX,KACE,8CACA,2CACC5F,EAAKS,eAER,kBAACuL,GAAA,EAAUpG,KAAX,KACE,2CAC2B,IAA1B5F,EAAKC,UAAU8J,OACd,kBAAC,EAAD,0BAEA,kBAACiC,GAAA,EAAD,CAAWnI,QAAQ,SAChB7D,EAAKC,UAAUM,KAAI,SAACJ,EAAMoK,GAAP,OAClB,kBAACyB,GAAA,EAAUpG,KAAX,CAAgBsD,IAAKqB,GACnB,kBAACjE,EAAA,EAAD,KACE,kBAACkE,EAAA,EAAD,CAAKE,GAAI,GACP,kBAACxE,EAAA,EAAD,CACEC,IAAKhG,EAAK6G,MACVgD,IAAK7J,EAAKmD,KACV8C,OAAK,EACL8G,SAAO,KAGX,kBAAC1C,EAAA,EAAD,KACE,kBAAC,OAAD,CAAM1E,GAAE,mBAAc3F,EAAKX,UACxBW,EAAKmD,OAGV,kBAACkH,EAAA,EAAD,CAAKE,GAAI,GACNvK,EAAKsL,IADR,MACgBtL,EAAKmH,MADrB,MAC+BnH,EAAKsL,IAAMtL,EAAKmH,gBAU/D,kBAACkD,EAAA,EAAD,CAAKE,GAAI,GACP,kBAAC7D,EAAA,EAAD,KACE,kBAACmF,GAAA,EAAD,CAAWnI,QAAQ,SACjB,kBAACmI,GAAA,EAAUpG,KAAX,KACE,8CAEF,kBAACoG,GAAA,EAAUpG,KAAX,KACE,kBAACU,EAAA,EAAD,KACE,kBAACkE,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,SAAOxK,EAAKkR,cAGhB,kBAAClF,GAAA,EAAUpG,KAAX,KACE,kBAACU,EAAA,EAAD,KACE,kBAACkE,EAAA,EAAD,iBACA,kBAACA,EAAA,EAAD,SAAOxK,EAAKmR,iBAGhB,kBAACnF,GAAA,EAAUpG,KAAX,KACE,kBAACU,EAAA,EAAD,KACE,kBAACkE,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,SAAOxK,EAAKoR,YAGhB,kBAACpF,GAAA,EAAUpG,KAAX,KACE,kBAACU,EAAA,EAAD,KACE,kBAACkE,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,SAAOxK,EAAKoP,cAGhB,kBAACpD,GAAA,EAAUpG,KAAX,KACGtG,GAAS,kBAAC,EAAD,CAASuE,QAAQ,UAAUvE,IAEvC,kBAAC0M,GAAA,EAAUpG,KAAX,KACE,kBAAChC,EAAA,EAAD,CACE3E,KAAK,SACL0E,UAAU,YACV4I,SAA6B,IAAnBvM,EAAKC,UACf8F,QAxGU,WACxB/B,EJrBuB,SAAC3C,GAAD,8CAAW,WAAO2C,EAAUC,GAAjB,uBAAAC,EAAA,sEAElCF,EAAS,CACP/E,KtBzB8B,yBsBsBE,EAO9BgF,IADWtD,EANmB,EAMhCD,UAAaC,SAETwD,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1D,EAAS2D,SAXJ,SAeXC,IAAMuJ,KAAN,cAA0BzM,EAAO8C,GAftB,gBAe1BM,EAf0B,EAe1BA,KAERT,EAAS,CACP/E,KtBvC8B,uBsBwC9BE,QAASsF,IAnBuB,kDAsBlCT,EAAS,CACP/E,KtB3C2B,oBsB4C3BE,QACE,KAAMuF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA3BoB,0DAAX,wDIsBrB2M,CAAY,CACVC,WAAYvR,EAAKC,UACjBC,gBAAiBF,EAAKE,gBACtBgR,WAAYlR,EAAKkR,WACjBzQ,cAAeT,EAAKS,cACpB0Q,cAAenR,EAAKmR,cACpBC,SAAUpR,EAAKoR,SACfhC,WAAYpP,EAAKoP,gBA2FT,cAMc,Y,SCoFfoC,GAtNK,SAAC,GAAwB,IAoBpBT,EApBF5G,EAAqB,EAArBA,MAAOzH,EAAc,EAAdA,QACtB+O,EAAUtH,EAAMC,OAAOrG,GADa,EAGVpB,oBAAS,GAHC,mBAGnC+O,EAHmC,KAGzBC,EAHyB,KAIpC3N,EAAWa,cAEXvD,EAAewD,aAAY,SAAChG,GAAD,OAAWA,EAAMwC,gBAC1CD,EAA0BC,EAA1BD,MAAOnC,EAAmBoC,EAAnBpC,QAASI,EAAUgC,EAAVhC,MAGhBqB,EADUmE,aAAY,SAAChG,GAAD,OAAWA,EAAM4B,aACvCC,SAEFY,EAAWuD,aAAY,SAAChG,GAAD,OAAWA,EAAMyC,YAC7BqQ,EAAoCrQ,EAA7CrC,QAA8B2S,EAAetQ,EAAxB5B,QAEvBgC,EAAemD,aAAY,SAAChG,GAAD,OAAWA,EAAM6C,gBACjCmQ,EAA4CnQ,EAArDzC,QAAkC6S,EAAmBpQ,EAA5BhC,QACjC,IAAKT,EAAS,CAOZmC,EAAM6P,YAJeH,EAKnB1P,EAAMkQ,WACHnE,QAAO,SAACC,EAAKlN,GAAN,OAAgBkN,EAAMlN,EAAKmH,OAASnH,EAAKsL,MAAK,GACrD6B,QAAQ,IANH0D,KAAKC,MAAY,IAANF,GAAa,KAAKzD,QAAQ,IASjD1F,qBAAU,WACHjH,GACH+B,EAAQS,KAAK,UAEf,ILE4BY,EKFtBiO,EAAe,uCAAG,gCAAA9N,EAAA,sEACWK,IAAMC,IAAI,sBADrB,gBACRyN,EADQ,EACdxN,MACFyN,EAASC,SAASC,cAAc,WAC/BnT,KAAO,kBACdiT,EAAO/L,IAAP,kDAAwD8L,EAAxD,8BACAC,EAAOG,OAAQ,EACfH,EAAOI,OAAS,WACdX,GAAY,IAGdQ,SAASI,KAAKC,YAAYN,GAVJ,4CAAH,sDAchB7Q,GAASwQ,GAAcE,GAAkB1Q,EAAMyF,MAAQ2K,GAC1DzN,EAAS,CAAE/E,K3BxDc,oB2ByDzB+E,EAAS,CAAE/E,K3B3CkB,wB2B4C7B+E,GLf0BD,EKeD0N,ELfA,uCAAQ,WAAOzN,EAAUC,GAAjB,uBAAAC,EAAA,sEAEnCF,EAAS,CACP/E,KtBrD+B,0BsBkDE,EAO/BgF,IADWtD,EANoB,EAMjCD,UAAaC,SAETwD,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAY1D,EAAS2D,SAVH,SAcZC,IAAMC,IAAN,sBAAyBT,GAAMI,GAdnB,gBAc3BM,EAd2B,EAc3BA,KAERT,EAAS,CACP/E,KtBlE+B,wBsBmE/BE,QAASsF,IAlBwB,kDAqBnCT,EAAS,CACP/E,KtBtE4B,qBsBuE5BE,QACE,KAAMuF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA1BqB,0DAAR,2DKgBftD,EAAMgO,SACXvH,OAAO2K,OAGVd,GAAY,GAFZK,OAKH,CAAChO,EAAU3C,EAAOwQ,EAAYJ,EAASM,IAS1C,OAAO7S,EACL,kBAAC,EAAD,MACEI,EACF,kBAAC,EAAD,CAASuE,QAAQ,UAAUvE,GAE3B,oCACE,qCAAW+B,EAAMyF,KACjB,kBAACR,EAAA,EAAD,KACE,kBAACkE,EAAA,EAAD,CAAKE,GAAI,GACP,kBAACsB,GAAA,EAAD,CAAWnI,QAAQ,SACjB,kBAACmI,GAAA,EAAUpG,KAAX,KACE,wCACA,2BACE,yCACCvE,EAAMP,KAAKwC,MAEd,2BACE,0CAAwB,IACxB,uBAAGmC,KAAI,iBAAYpE,EAAMP,KAAK2M,QAA9B,IAAyCpM,EAAMP,KAAK2M,QAEtD,2BACE,2CACCpM,EAAMnB,gBAAgB6P,QAFzB,MAEqC1O,EAAMnB,gBAAgB+P,KAF3D,IAEkE,IAC/D5O,EAAMnB,gBAAgBmR,WAHzB,KAGuC,IACpChQ,EAAMnB,gBAAgBmQ,SAExBhP,EAAMkO,YACL,kBAAC,EAAD,CAAS1L,QAAQ,WAAjB,gBACgBxC,EAAMqR,aAGtB,kBAAC,EAAD,CAAS7O,QAAQ,UAAjB,kBAGJ,kBAACmI,GAAA,EAAUpG,KAAX,KACE,8CACA,2BACE,2CACCvE,EAAMZ,eAERY,EAAMgO,OACL,kBAAC,EAAD,CAASxL,QAAQ,WAAjB,WAAoCxC,EAAMiO,QAE1C,kBAAC,EAAD,CAASzL,QAAQ,UAAjB,aAGJ,kBAACmI,GAAA,EAAUpG,KAAX,KACE,2CAC6B,IAA5BvE,EAAMkQ,WAAWxH,OAChB,kBAAC,EAAD,uBAEA,kBAACiC,GAAA,EAAD,CAAWnI,QAAQ,SAChBxC,EAAMkQ,WAAWhR,KAAI,SAACJ,EAAMoK,GAAP,OACpB,kBAACyB,GAAA,EAAUpG,KAAX,CAAgBsD,IAAKqB,GACnB,kBAACjE,EAAA,EAAD,KACE,kBAACkE,EAAA,EAAD,CAAKE,GAAI,GACP,kBAACxE,EAAA,EAAD,CACEC,IAAKhG,EAAK6G,MACVgD,IAAK7J,EAAKmD,KACV8C,OAAK,EACL8G,SAAO,KAGX,kBAAC1C,EAAA,EAAD,KACE,kBAAC,OAAD,CAAM1E,GAAE,mBAAc3F,EAAKX,UACxBW,EAAKmD,OAGV,kBAACkH,EAAA,EAAD,CAAKE,GAAI,GACNvK,EAAKsL,IADR,MACgBtL,EAAKmH,MADrB,MAC+BnH,EAAKsL,IAAMtL,EAAKmH,gBAU/D,kBAACkD,EAAA,EAAD,CAAKE,GAAI,GACP,kBAAC7D,EAAA,EAAD,KACE,kBAACmF,GAAA,EAAD,CAAWnI,QAAQ,SACjB,kBAACmI,GAAA,EAAUpG,KAAX,KACE,8CAEF,kBAACoG,GAAA,EAAUpG,KAAX,KACE,kBAACU,EAAA,EAAD,KACE,kBAACkE,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,SAAOnJ,EAAM6P,cAGjB,kBAAClF,GAAA,EAAUpG,KAAX,KACE,kBAACU,EAAA,EAAD,KACE,kBAACkE,EAAA,EAAD,iBACA,kBAACA,EAAA,EAAD,SAAOnJ,EAAM8P,iBAGjB,kBAACnF,GAAA,EAAUpG,KAAX,KACE,kBAACU,EAAA,EAAD,KACE,kBAACkE,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,SAAOnJ,EAAM+P,YAGjB,kBAACpF,GAAA,EAAUpG,KAAX,KACE,kBAACU,EAAA,EAAD,KACE,kBAACkE,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,SAAOnJ,EAAM+N,eAGf/N,EAAMgO,QACN,kBAACrD,GAAA,EAAUpG,KAAX,KACGgM,GAAc,kBAAC,EAAD,MACbF,EAGA,kBAAC,gBAAD,CACEiB,SAAU,MACVC,OAAQvR,EAAM+N,WACdyD,UA9HU,SAACC,GAC7B9O,ELMoB,SAACyN,EAASqB,GAAV,8CAA4B,WAClD9O,EACAC,GAFkD,uBAAAC,EAAA,sEAKhDF,EAAS,CACP/E,KtBnF2B,sBsB6EmB,EAU5CgF,IADWtD,EATiC,EAS9CD,UAAaC,SAETwD,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1D,EAAS2D,SAdU,SAkBzBC,IAAMqK,IAAN,sBACN6C,EADM,QAErBqB,EACA3O,GArB8C,gBAkBxCM,EAlBwC,EAkBxCA,KAMRT,EAAS,CACP/E,KtBrG2B,oBsBsG3BE,QAASsF,IA1BqC,kDA6BhDT,EAAS,CACP/E,KtBzGwB,iBsB0GxBE,QACE,KAAMuF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAlCkC,0DAA5B,wDKNXoO,CAAStB,EAASqB,OAwHX,kBAAC,EAAD,OAULhB,GAAkB,kBAAC,EAAD,MAClBnR,GACCA,EAASsF,SACT5E,EAAMgO,SACLhO,EAAMkO,aACL,kBAACvD,GAAA,EAAUpG,KAAX,KACE,kBAAChC,EAAA,EAAD,CACE3E,KAAK,SACL0E,UAAU,gBACVoC,QAxIG,WACrB/B,ELyCwB,SAAC3C,GAAD,8CAAW,WAAO2C,EAAUC,GAAjB,uBAAAC,EAAA,sEAEnCF,EAAS,CACP/E,KtBzG+B,0BsBsGE,EAO/BgF,IADWtD,EANoB,EAMjCD,UAAaC,SAETwD,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAY1D,EAAS2D,SAVH,SAcZC,IAAMqK,IAAN,sBACNvN,EAAMyF,IADA,YAErB,GACA3C,GAjBiC,gBAc3BM,EAd2B,EAc3BA,KAMRT,EAAS,CACP/E,KtB1H+B,wBsB2H/BE,QAASsF,IAtBwB,kDAyBnCT,EAAS,CACP/E,KtB9H4B,qBsB+H5BE,QACE,KAAMuF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA9BqB,0DAAX,wDKzCfqO,CAAa3R,MAoIN,4BC1HL4R,GAtFQ,SAAC,GAAiB,IAAfvQ,EAAc,EAAdA,QAClBsB,EAAWa,cACX7D,EAAW8D,aAAY,SAAChG,GAAD,OAAWA,EAAMkC,YACtC9B,EAA0B8B,EAA1B9B,QAASI,EAAiB0B,EAAjB1B,MAAO2B,EAAUD,EAAVC,MAGhBN,EADUmE,aAAY,SAAChG,GAAD,OAAWA,EAAM4B,aACvCC,SAGSuS,EADEpO,aAAY,SAAChG,GAAD,OAAWA,EAAMoC,cACxCvB,QAERiI,qBAAU,WACJjH,GAAYA,EAASsF,QACvBjC,E1BqKmB,uCAAM,WAAOA,EAAUC,GAAjB,uBAAAC,EAAA,sEAE3BF,EAAS,CACP/E,KJzK2B,sBIsKF,EAOvBgF,IADWtD,EANY,EAMzBD,UAAaC,SAETwD,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAY1D,EAAS2D,SAVX,SAcJC,IAAMC,IAAN,aAAwBL,GAdpB,gBAcnBM,EAdmB,EAcnBA,KAERT,EAAS,CACP/E,KJtL2B,oBIuL3BE,QAASsF,IAlBgB,kDAqB3BT,EAAS,CACP/E,KJ1LwB,iBI2LxBE,QACE,KAAMuF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA1Ba,0DAAN,yD0BnKnBjC,EAAQS,KAAK,YAEd,CAACa,EAAUtB,EAAS/B,EAAUuS,IAEjC,IAAMC,EAAgB,SAACpP,GACjB+D,OAAOsL,QAAQ,iBACjBpP,E1B4LqB,SAACD,GAAD,8CAAQ,WAAOC,EAAUC,GAAjB,mBAAAC,EAAA,sEAE/BF,EAAS,CACP/E,KJnM6B,wBIgMA,EAO3BgF,IADWtD,EANgB,EAM7BD,UAAaC,SAETwD,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAY1D,EAAS2D,SAVP,SAazBC,IAAM8O,OAAN,qBAA2BtP,GAAMI,GAbR,OAc/BH,EAAS,CACP/E,KJ9M6B,wBI+LA,gDAkB/B+E,EAAS,CACP/E,KJjN0B,mBIkN1BE,QACE,KAAMuF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAvBiB,yDAAR,wD0B5LZ2O,CAAYvP,KAGzB,OACE,oCACE,qCACC7E,EACC,kBAAC,EAAD,MACEI,EACF,kBAAC,EAAD,CAASuE,QAAQ,UAAUvE,GAE3B,kBAACwP,GAAA,EAAD,KACE,+BACE,4BACE,kCACA,oCACA,qCACA,qCACA,6BACA,+BAGJ,+BACG7N,EAAMV,KAAI,SAACO,GAAD,OACT,wBAAIoI,IAAKpI,EAAKgG,KACZ,4BAAKhG,EAAKgG,KACV,4BAAKhG,EAAKwC,MACV,4BACE,uBAAGmC,KAAI,iBAAY3E,EAAK2M,QAAU3M,EAAK2M,QAGzC,4BACG3M,EAAKmF,QACJ,uBAAGtC,UAAU,gBAAgB+C,MAAO,CAAED,MAAO,UAC1C,KAGH,uBAAG9C,UAAU,eAAe+C,MAAO,CAAED,MAAO,UAGhD,4BACE,kBAAC,gBAAD,CAAeX,GAAE,sBAAiBhF,EAAKgG,IAAtB,UACf,kBAAClD,EAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,UAChC,uBAAGA,UAAU,mBAInB,4BACE,kBAACC,EAAA,EAAD,CACEC,QAAQ,SACRF,UAAU,SACVoC,QAAS,kBAAMoN,EAAcrS,EAAKgG,OAElC,uBAAGnD,UAAU,2BCiBlB4P,GAzFQ,SAAC,GAAwB,IAAtBpJ,EAAqB,EAArBA,MAAOzH,EAAc,EAAdA,QACzB8Q,EAASrJ,EAAMC,OAAOrG,GADiB,EAGrBpB,mBAAS,IAHY,mBAGtCW,EAHsC,KAGhC8K,EAHgC,OAInBzL,mBAAS,IAJU,mBAItC8K,EAJsC,KAI/BC,EAJ+B,OAKf/K,oBAAS,GALM,mBAKtCsD,EALsC,KAK7BwN,EAL6B,KAMvCzP,EAAWa,cAEXhE,EAAciE,aAAY,SAAChG,GAAD,OAAWA,EAAM+B,eACzC3B,EAAyB2B,EAAzB3B,QAASI,EAAgBuB,EAAhBvB,MAAOwB,EAASD,EAATC,KAElBK,EAAa2D,aAAY,SAAChG,GAAD,OAAWA,EAAMqC,cAErCuS,EAGPvS,EAHFjC,QACOyU,EAELxS,EAFF7B,MACSsU,EACPzS,EADFxB,QAEFiI,qBAAU,WACJgM,GACF5P,EAAS,CAAE/E,K/BGgB,sB+BF3ByD,EAAQS,KAAK,oBAERrC,EAAKwC,MAAQxC,EAAKgG,MAAQ0M,GAG7BpF,EAAQtN,EAAKwC,MACboK,EAAS5M,EAAK2M,OACdgG,EAAW3S,EAAKmF,UAJhBjC,EAASF,EAAe0P,MAO3B,CAACxP,EAAUtB,EAAS8Q,EAAQ1S,EAAM8S,IAOrC,OACE,oCACE,kBAAC,OAAD,CAAM9N,GAAG,kBAAkBnC,UAAU,sBAArC,YAGA,kBAAC,GAAD,KACE,yCACC+P,GAAiB,kBAAC,EAAD,MACjBC,GAAe,kBAAC,EAAD,CAAS9P,QAAQ,UAAU8P,GAC1CzU,EACC,kBAAC,EAAD,MACEI,EACF,kBAAC,EAAD,CAASuE,QAAQ,UAAUvE,GAE3B,kBAACwD,EAAA,EAAD,CAAMC,SAnBQ,SAACC,GACrBA,EAAEC,iBAEFe,E3BuMsB,SAAClD,GAAD,8CAAU,WAAOkD,EAAUC,GAAjB,uBAAAC,EAAA,sEAEhCF,EAAS,CACP/E,KJ1N6B,wBIuNC,EAO5BgF,IADWtD,EANiB,EAM9BD,UAAaC,SAETwD,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1D,EAAS2D,SAXN,SAeTC,IAAMqK,IAAN,qBAAwB9N,EAAKgG,KAAOhG,EAAMqD,GAfjC,gBAexBM,EAfwB,EAexBA,KAERT,EAAS,CACP/E,KJxO6B,sBIyO7BE,QAASsF,IAEXT,EAAS,CACP/E,KJ/P8B,yBIiQhC+E,EAAS,CAAE/E,KJ/PmB,uBIuOE,kDA0BhC+E,EAAS,CACP/E,KJhP0B,mBIiP1BE,QACE,KAAMuF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA/BkB,0DAAV,wD2BvMbkP,CAAW,CAAE/M,IAAK0M,EAAQlQ,OAAMmK,QAAOxH,eAiBxC,kBAACnD,EAAA,EAAKkL,MAAN,CAAYC,UAAU,QACpB,kBAACnL,EAAA,EAAKoL,MAAN,aACA,kBAACpL,EAAA,EAAKO,QAAN,CACEpE,KAAK,OACLyE,YAAY,aACZD,MAAOH,EACPC,SAAU,SAACP,GAAD,OAAOoL,EAAQpL,EAAEQ,OAAOC,WAGtC,kBAACX,EAAA,EAAKkL,MAAN,CAAYC,UAAU,SACpB,kBAACnL,EAAA,EAAKoL,MAAN,qBACA,kBAACpL,EAAA,EAAKO,QAAN,CACEpE,KAAK,QACLyE,YAAY,cACZD,MAAOgK,EACPlK,SAAU,SAACP,GAAD,OAAO0K,EAAS1K,EAAEQ,OAAOC,WAIvC,kBAACX,EAAA,EAAKkL,MAAN,CAAYC,UAAU,WACpB,kBAACnL,EAAA,EAAK4N,MAAN,CACEzR,KAAK,WACL0R,MAAM,WACNC,QAAS3K,EACT1C,SAAU,SAACP,GAAD,OAAOyQ,EAAWzQ,EAAEQ,OAAOoN,aAGzC,kBAAChN,EAAA,EAAD,CAAQ3E,KAAK,SAAS4E,QAAQ,WAA9B,cCmDGiQ,GA9HW,SAAC,GAAwB,IAAtBpR,EAAqB,EAArBA,QACrBqR,EAD0C,EAAZ5J,MACXC,OAAOV,YAAc,EACxC1F,EAAWa,cAEXhG,EAAciG,aAAY,SAAChG,GAAD,OAAWA,EAAMD,eACzCK,EAA0CL,EAA1CK,QAASI,EAAiCT,EAAjCS,MAAOP,EAA0BF,EAA1BE,SAAUK,EAAgBP,EAAhBO,MAAOC,EAASR,EAATQ,KAEnCK,EAAgBoF,aAAY,SAAChG,GAAD,OAAWA,EAAMY,iBAExCsU,EAGPtU,EAHFR,QACO+U,EAELvU,EAFFJ,MACS4T,EACPxT,EADFC,QAGIC,EAAgBkF,aAAY,SAAChG,GAAD,OAAWA,EAAMc,iBAExCsU,EAIPtU,EAJFV,QACOiV,EAGLvU,EAHFN,MACS8U,EAEPxU,EAFFD,QACS0U,EACPzU,EADFJ,QAIMmB,EADUmE,aAAY,SAAChG,GAAD,OAAWA,EAAM4B,aACvCC,SAERiH,qBAAU,WACR5D,EAAS,CAAE/E,KpCxBqB,yBoC0B3B0B,EAASsF,SACZvD,EAAQS,KAAK,UAGXiR,EACF1R,EAAQS,KAAR,yBAA+BkR,EAAevN,IAA9C,UAEA9C,EAASyF,GAAa,GAAIsK,MAE3B,CACD/P,EACAtB,EACA/B,EACAuS,EACAkB,EACAC,EACAN,IAGF,IAAMZ,EAAgB,SAACpP,GACjB+D,OAAOsL,QAAQ,iBACjBpP,EnBCuB,SAACD,GAAD,8CAAQ,WAAOC,EAAUC,GAAjB,mBAAAC,EAAA,sEAEjCF,EAAS,CACP/E,KjB1DgC,2BiBuDD,EAO7BgF,IADWtD,EANkB,EAM/BD,UAAaC,SAETwD,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAY1D,EAAS2D,SAVL,SAc3BC,IAAM8O,OAAN,wBAA8BtP,GAAMI,GAdT,OAgBjCH,EAAS,CACP/E,KjBvEgC,2BiBsDD,gDAoBjC+E,EAAS,CACP/E,KjB1E6B,sBiB2E7BE,QACE,KAAMuF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAzBmB,yDAAR,wDmBDd2P,CAAcvQ,KAO3B,OACE,oCACE,kBAACuC,EAAA,EAAD,CAAK3C,UAAU,sBACb,kBAAC6G,EAAA,EAAD,KACE,yCAEF,kBAACA,EAAA,EAAD,CAAK7G,UAAU,cACb,kBAACC,EAAA,EAAD,CAAQD,UAAU,OAAOoC,QAVJ,WAC3B/B,EnB0ByB,uCAAM,WAAOA,EAAUC,GAAjB,uBAAAC,EAAA,sEAE/BF,EAAS,CACP/E,KjBpFgC,2BiBiFH,EAO3BgF,IADWtD,EANgB,EAM7BD,UAAaC,SAETwD,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAY1D,EAAS2D,SAVP,SAcRC,IAAMuJ,KAAN,iBAA6B,GAAI3J,GAdzB,gBAcvBM,EAduB,EAcvBA,KAERT,EAAS,CACP/E,KjBjGgC,yBiBkGhCE,QAASsF,IAlBoB,kDAqB/BT,EAAS,CACP/E,KjBrG6B,sBiBsG7BE,QACE,KAAMuF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA1BiB,0DAAN,2DmBhBjB,uBAAGhB,UAAU,gBADf,oBAKHqQ,GAAiB,kBAAC,EAAD,MACjBC,GAAe,kBAAC,EAAD,CAASpQ,QAAQ,UAAUoQ,GAC1CC,GAAiB,kBAAC,EAAD,MACjBC,GAAe,kBAAC,EAAD,CAAStQ,QAAQ,UAAUsQ,GAC1CjV,EACC,kBAAC,EAAD,MACEI,EACF,kBAAC,EAAD,CAASuE,QAAQ,UAAUvE,GAE3B,oCACE,kBAACwP,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAACvL,UAAU,YACjD,+BACE,4BACE,kCACA,oCACA,qCACA,wCACA,qCACA,6BACA,+BAGJ,+BACG5E,EAASwB,KAAI,SAACf,GAAD,OACZ,wBAAI0J,IAAK1J,EAAQsH,KACf,4BAAKtH,EAAQsH,KACb,4BAAKtH,EAAQ8D,MACb,gCAAM9D,EAAQ8H,OACd,4BAAK9H,EAAQ+U,UACb,4BAAK/U,EAAQgV,OAEb,4BACE,kBAAC,gBAAD,CAAe1O,GAAE,yBAAoBtG,EAAQsH,IAA5B,UACf,kBAAClD,EAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,UAChC,uBAAGA,UAAU,mBAInB,4BACE,kBAACC,EAAA,EAAD,CACEC,QAAQ,SACRF,UAAU,SACVoC,QAAS,kBAAMoN,EAAc3T,EAAQsH,OAErC,uBAAGnD,UAAU,yBAOzB,kBAAC,EAAD,CAAUvE,MAAOA,EAAOC,KAAMA,EAAM4G,SAAS,OC+DxCwO,GAxLW,SAAC,GAAwB,IAAtBtK,EAAqB,EAArBA,MAAOzH,EAAc,EAAdA,QAC5BmK,EAAY1C,EAAMC,OAAOrG,GADiB,EAGxBpB,mBAAS,IAHe,mBAGzCW,EAHyC,KAGnC8K,EAHmC,OAItBzL,mBAAS,GAJa,mBAIzC2E,EAJyC,KAIlCoN,EAJkC,OAKtB/R,mBAAS,IALa,mBAKzCqE,EALyC,KAKlC2N,EALkC,OAMtBhS,mBAAS,IANa,mBAMzC6R,EANyC,KAMlCI,EANkC,OAOhBjS,mBAAS,IAPO,mBAOzC4R,EAPyC,KAO/BM,EAP+B,OAQZlS,mBAAS,GARG,mBAQzCyJ,EARyC,KAQ7B0I,EAR6B,OASVnS,mBAAS,GATC,mBASzCwJ,EATyC,KAS5B4I,EAT4B,OAUfpS,oBAAS,GAVM,mBAUzCqS,EAVyC,KAU/BC,EAV+B,KAW1CjR,EAAWa,cAEXtF,EAAiBuF,aAAY,SAAChG,GAAD,OAAWA,EAAMS,kBAC5CL,EAA4BK,EAA5BL,QAASI,EAAmBC,EAAnBD,MAAOE,EAAYD,EAAZC,QAElBK,GAAgBiF,aAAY,SAAChG,GAAD,OAAWA,EAAMe,iBAExC6T,GAGP7T,GAHFX,QACOyU,GAEL9T,GAFFP,MACSsU,GACP/T,GADFF,QAGFiI,qBAAU,WACJgM,IACF5P,EAAS,CAAE/E,KrChBmB,yBqCiB9ByD,EAAQS,KAAK,uBAER3D,EAAQ8D,MAAQ9D,EAAQsH,MAAQ+F,GAGnCuB,EAAQ5O,EAAQ8D,MAChBoR,EAASlV,EAAQ8H,OACjBqN,EAAQ,WAAR,cAAY3N,GAAZ,QAAmBxH,EAAQwH,SAC3B4N,EAASpV,EAAQgV,OACjBK,EAAYrV,EAAQ+U,UACpBO,EAActV,EAAQ4M,YACtB2I,EAAevV,EAAQ2M,cARvBnI,EAAS2F,GAAmBkD,MAW/B,CAAC7I,EAAUtB,EAASmK,EAAWrN,EAASoU,KAE3C,IAAMsB,GAAiB,uCAAG,WAAOlS,GAAP,6BAAAkB,EAAA,sDAClBiR,EAAQnS,EAAEQ,OAAO2R,MACnBnK,EAAS,GACJoK,EAAI,EAHW,YAGRA,EAAID,EAAMpL,QAHF,wBAIhBsL,EAAOF,EAAMC,IACbE,EAAW,IAAIC,UACZC,OAAO,QAASH,GACzBJ,GAAa,GAPS,SASd9Q,EAAS,CACbC,QAAS,CACP,eAAgB,wBAXA,UAcGG,IAAMuJ,KAAK,cAAewH,EAAUnR,GAdvC,iBAcZM,EAdY,EAcZA,KAERuG,GAAUvG,EAAO,IACjBuD,QAAQC,IAAI+C,GACZ2J,EAAS3J,GACTiK,GAAa,GAnBO,kDAqBpBjN,QAAQ1I,MAAR,MACA2V,GAAa,GAtBO,QAGUG,IAHV,yEAAH,sDA0CvB,OACE,oCACE,kBAAC,OAAD,CAAMtP,GAAG,qBAAqBnC,UAAU,sBAAxC,YAGA,kBAAC,GAAD,KACE,4CAEC+P,IAAiB,kBAAC,EAAD,MACjBC,IAAe,kBAAC,EAAD,CAAS9P,QAAQ,UAAU8P,GAA3B,KACfzU,EACC,kBAAC,EAAD,MACEI,EACF,kBAAC,EAAD,CAASuE,QAAQ,UAAUvE,GAE3B,kBAACwD,EAAA,EAAD,CAAMC,SA/BQ,SAACC,GACrBA,EAAEC,iBAEFe,EpB0CyB,SAACxE,GAAD,8CAAa,WAAOwE,EAAUC,GAAjB,uBAAAC,EAAA,sEAEtCF,EAAS,CACP/E,KjB9GgC,2BiB2GI,EAOlCgF,IADWtD,EANuB,EAMpCD,UAAaC,SAETwD,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1D,EAAS2D,SAXA,SAefC,IAAMqK,IAAN,wBACJpP,EAAQsH,KACzBtH,EACA2E,GAlBoC,gBAe9BM,EAf8B,EAe9BA,KAMRT,EAAS,CACP/E,KjBhIgC,yBiBiIhCE,QAASsF,IAvB2B,kDA0BtCT,EAAS,CACP/E,KjBpI6B,sBiBqI7BE,QACE,KAAMuF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA/BwB,0DAAb,wDoBzCvB8Q,CAAc,CACZ3O,IAAK+F,EACLvJ,OACAgE,QACAkN,QACAD,WACApI,cACAC,aACApF,aAoBI,kBAAClE,EAAA,EAAKkL,MAAN,CAAYC,UAAU,QACpB,kBAACnL,EAAA,EAAKoL,MAAN,aACA,kBAACpL,EAAA,EAAKO,QAAN,CACEpE,KAAK,OACLyE,YAAY,aACZD,MAAOH,EACPC,SAAU,SAACP,GAAD,OAAOoL,EAAQpL,EAAEQ,OAAOC,WAGtC,kBAACX,EAAA,EAAKkL,MAAN,CAAYC,UAAU,SACpB,kBAACnL,EAAA,EAAKoL,MAAN,qBACA,kBAACpL,EAAA,EAAKO,QAAN,CACEpE,KAAK,SACLyE,YAAY,cACZD,MAAO6D,EACP/D,SAAU,SAACP,GAAD,OAAO0R,EAAS1R,EAAEQ,OAAOC,WAIvC,kBAACX,EAAA,EAAKkL,MAAN,CAAYC,UAAU,SACpB,kBAACnL,EAAA,EAAKoL,MAAN,cACA,kBAACpL,EAAA,EAAKO,QAAN,CACEpE,KAAK,OACLyE,YAAY,kBACZD,MAAOuD,EACPzD,SAAU,SAACP,GAAD,OAAO2R,EAAS3R,EAAEQ,OAAOC,UAErC,kBAACX,EAAA,EAAK4S,KAAN,CACE3R,GAAG,aACH4M,MAAM,aACNgF,QAAM,EACNC,UAAQ,EACRrS,SAAU2R,KAEXF,GAAY,kBAAC,EAAD,OAGf,kBAAClS,EAAA,EAAKkL,MAAN,CAAYC,UAAU,SACpB,kBAACnL,EAAA,EAAKoL,MAAN,cACA,kBAACpL,EAAA,EAAKO,QAAN,CACEpE,KAAK,OACLyE,YAAY,gBACZD,MAAO+Q,EACPjR,SAAU,SAACP,GAAD,OAAO4R,EAAS5R,EAAEQ,OAAOC,WAGvC,kBAACX,EAAA,EAAKkL,MAAN,CAAYC,UAAU,gBACpB,kBAACnL,EAAA,EAAKoL,MAAN,qBACA,kBAACpL,EAAA,EAAKO,QAAN,CACEpE,KAAK,OACLyE,YAAY,yBACZD,MAAO2I,EACP7I,SAAU,SAACP,GAAD,OAAO8R,EAAc9R,EAAEQ,OAAOC,WAI5C,kBAACX,EAAA,EAAKkL,MAAN,CAAYC,UAAU,YACpB,kBAACnL,EAAA,EAAKoL,MAAN,iBACA,kBAACpL,EAAA,EAAKO,QAAN,CACEpE,KAAK,OACLyE,YAAY,qBACZD,MAAO8Q,EACPhR,SAAU,SAACP,GAAD,OAAO6R,EAAY7R,EAAEQ,OAAOC,WAG1C,kBAACX,EAAA,EAAKkL,MAAN,CAAYC,UAAU,eACpB,kBAACnL,EAAA,EAAKoL,MAAN,oBACA,kBAACpL,EAAA,EAAKO,QAAN,CACEpE,KAAK,OACLyE,YAAY,wBACZD,MAAO0I,EACP5I,SAAU,SAACP,GAAD,OAAO+R,EAAe/R,EAAEQ,OAAOC,WAG7C,kBAACG,EAAA,EAAD,CAAQ3E,KAAK,SAAS4E,QAAQ,WAA9B,cCnGGgS,GA9ES,SAAC,GAAiB,IAAfnT,EAAc,EAAdA,QACnBsB,EAAWa,cACXnD,EAAeoD,aAAY,SAAChG,GAAD,OAAWA,EAAM4C,gBAC1CxC,EAA2BwC,EAA3BxC,QAASI,EAAkBoC,EAAlBpC,MAAOmC,EAAWC,EAAXD,OAGhBd,EADUmE,aAAY,SAAChG,GAAD,OAAWA,EAAM4B,aACvCC,SAERiH,qBAAU,WACJjH,GAAYA,EAASsF,QACvBjC,EV+KuB,uCAAM,WAAOA,EAAUC,GAAjB,uBAAAC,EAAA,sEAE/BF,EAAS,CACP/E,KtBlLgC,2BsB+KH,EAO3BgF,IADWtD,EANgB,EAM7BD,UAAaC,SAETwD,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAY1D,EAAS2D,SAVP,SAcRC,IAAMC,IAAN,eAA0BL,GAdlB,gBAcvBM,EAduB,EAcvBA,KAERT,EAAS,CACP/E,KtB/LgC,yBsBgMhCE,QAASsF,IAlBoB,kDAqB/BT,EAAS,CACP/E,KtBnM6B,sBsBoM7BE,QACE,KAAMuF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA1BiB,0DAAN,yDU7KvBjC,EAAQS,KAAK,YAEd,CAACa,EAAUtB,EAAS/B,IAOvB,OACE,oCACE,sCACCzB,EACC,kBAAC,EAAD,MACEI,EACF,kBAAC,EAAD,CAASuE,QAAQ,UAAUvE,GAE3B,kBAACwP,GAAA,EAAD,KACE,+BACE,4BACE,kCACA,oCACA,oCACA,qCACA,oCACA,yCAGJ,+BACGrN,EAAOlB,KAAI,SAACc,GAAD,OACV,wBAAI6H,IAAK7H,EAAMyF,KACb,4BAAKzF,EAAMyF,KACX,4BAAKzF,EAAMP,MAAQO,EAAMP,KAAKwC,MAC9B,4BAAKjC,EAAM8N,UAAUjE,UAAU,EAAG,KAClC,4BAAK7J,EAAM+N,YACX,4BACG/N,EAAMgO,OACLhO,EAAMiO,OAAOpE,UAAU,IAEvB,uBAAGvH,UAAU,kBAGjB,4BACGtC,EAAMyU,WACLzU,EAAM0U,WAAW7K,UAAU,IAE3B,uBAAGvH,UAAU,kBAIjB,4BACE,kBAAC,gBAAD,CAAemC,GAAE,iBAAYzE,EAAMyF,MACjC,kBAAClD,EAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,UAAlC,qBCLLqS,GA/CH,WACV,OACE,kBAAC,gBAAD,KACE,kBAAC,EAAD,MACA,8BACE,kBAAC9Q,EAAA,EAAD,KACE,kBAAC,IAAD,CAAO+Q,KAAK,SAASC,UAAW1I,GAAa2I,OAAK,IAClD,kBAAC,IAAD,CAAOF,KAAK,cAAcC,UAAWrF,GAAkBsF,OAAK,IAC5D,kBAAC,IAAD,CAAOF,KAAK,aAAaC,UAAW1E,GAAa2E,OAAK,IACtD,kBAAC,IAAD,CAAOF,KAAK,YAAYC,UAAWpG,GAAgBqG,OAAK,IACxD,kBAAC,IAAD,CAAOF,KAAK,WAAWC,UAAW1F,GAAe2F,OAAK,IACtD,kBAAC,IAAD,CAAOF,KAAK,YAAYC,UAAW/H,GAAgBgI,OAAK,IACxD,kBAAC,IAAD,CAAOF,KAAK,WAAWC,UAAWzH,GAAe0H,OAAK,IACtD,kBAAC,IAAD,CAAOF,KAAK,eAAeC,UAAW1K,KACtC,kBAAC,IAAD,CAAOyK,KAAK,aAAaC,UAAWvJ,KACpC,kBAAC,IAAD,CAAOsJ,KAAK,kBAAkBC,UAAWjD,KACzC,kBAAC,IAAD,CACEgD,KAAK,qBACLC,UAAWpC,GACXqC,OAAK,IAEP,kBAAC,IAAD,CACEF,KAAK,iCACLC,UAAWpC,GACXqC,OAAK,IAEP,kBAAC,IAAD,CAAOF,KAAK,uBAAuBC,UAAW3C,KAC9C,kBAAC,IAAD,CACE0C,KAAK,0BACLC,UAAWzB,KAEb,kBAAC,IAAD,CAAOwB,KAAK,mBAAmBC,UAAWL,KAC1C,kBAAC,IAAD,CAAOI,KAAK,mBAAmBC,UAAWhM,GAAYiM,OAAK,IAC3D,kBAAC,IAAD,CAAOF,KAAK,IAAIC,UAAWhM,GAAYiM,OAAK,IAC5C,kBAAC,IAAD,CAAOF,KAAK,oBAAoBC,UAAWhM,GAAYiM,OAAK,IAC5D,kBAAC,IAAD,CACEF,KAAK,oCACLC,UAAWhM,GACXiM,OAAK,MAIX,kBAAC,EAAD,QClDcC,QACW,cAA7BtO,OAAO8E,SAASyJ,UAEe,UAA7BvO,OAAO8E,SAASyJ,UAEhBvO,OAAO8E,SAASyJ,SAASlM,MACvB,2DCNNmM,IAAShR,OACP,kBAAC,IAAD,CAAUjD,MAAOA,GACf,kBAAC,GAAD,OAEF8P,SAASoE,eAAe,SDmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAxX,GACL0I,QAAQ1I,MAAMA,EAAMqF,a","file":"static/js/main.07c00ba3.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\n\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer,\r\n} from \"./reducers/productReducers\"\r\nimport { cartReducer } from \"./reducers/cartReducers\"\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from \"./reducers/userReducers\"\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderListMyReducer,\r\n  orderListAllReducer,\r\n  orderDeliverReducer,\r\n} from \"./reducers/orderReducer\"\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderListAll: orderListAllReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\r\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n  : {}\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n}\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import {\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n  PRODUCT_TOP_RESET,\r\n  PRODUCT_TOP_REQUEST,\r\n} from \"../constants/productConstants\"\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.products,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page,\r\n      }\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const productDetailsReducer = (\r\n  state = { product: { reviews: [] } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { loading: true, ...state }\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload }\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_TOP_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_TOP_SUCCESS:\r\n      return { loading: false, products: action.payload }\r\n    case PRODUCT_TOP_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\"\r\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\"\r\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\"\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\"\r\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\"\r\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\"\r\n\r\nexport const PRODUCT_DELETE_REQUEST = \"PRODUCT_DELETE_REQUEST\"\r\nexport const PRODUCT_DELETE_SUCCESS = \"PRODUCT_DELETE_SUCCESS\"\r\nexport const PRODUCT_DELETE_FAIL = \"PRODUCT_DELETE_FAIL\"\r\n\r\nexport const PRODUCT_CREATE_REQUEST = \"PRODUCT_CREATE_REQUEST\"\r\nexport const PRODUCT_CREATE_SUCCESS = \"PRODUCT_CREATE_SUCCESS\"\r\nexport const PRODUCT_CREATE_FAIL = \"PRODUCT_CREATE_FAIL\"\r\nexport const PRODUCT_CREATE_RESET = \"PRODUCT_CREATE_RESET\"\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = \"PRODUCT_UPDATE_REQUEST\"\r\nexport const PRODUCT_UPDATE_SUCCESS = \"PRODUCT_UPDATE_SUCCESS\"\r\nexport const PRODUCT_UPDATE_FAIL = \"PRODUCT_UPDATE_FAIL\"\r\nexport const PRODUCT_UPDATE_RESET = \"PRODUCT_UPDATE_RESET\"\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = \"PRODUCT_CREATE_REVIEW_REQUEST\"\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = \"PRODUCT_CREATE_REVIEW_SUCCESS\"\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = \"PRODUCT_CREATE_REVIEW_FAIL\"\r\nexport const PRODUCT_CREATE_REVIEW_RESET = \"PRODUCT_CREATE_REVIEW_RESET\"\r\n\r\nexport const PRODUCT_TOP_REQUEST = \"PRODUCT_TOP_REQUEST\"\r\nexport const PRODUCT_TOP_SUCCESS = \"PRODUCT_TOP_SUCCESS\"\r\nexport const PRODUCT_TOP_FAIL = \"PRODUCT_TOP_FAIL\"\r\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n} from \"../constants/cartConstants\"\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload\r\n      const existItem = state.cartItems.find((x) => x.product === item.product)\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        }\r\n      }\r\n\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      }\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      }\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const CART_ADD_ITEM = \"CART_ADD_ITEM\"\r\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\"\r\nexport const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\"\r\nexport const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\"\r\n","import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_LOGOUT,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_RESET,\r\n  USER_UPDATE_PROFILE_RESET,\r\n} from \"../constants/userConstants\"\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true }\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGIN_LOGOUT:\r\n      return { loading: false }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true }\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload }\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload }\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true }\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload }\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LIST_RESET:\r\n      return { users: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_UPDATE_RESET:\r\n      return { user: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\"\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\"\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\"\r\nexport const USER_LOGIN_LOGOUT = \"USER_LOGIN_LOGOUT\"\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\"\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\"\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\"\r\n\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\"\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\"\r\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\"\r\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\"\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\"\r\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\"\r\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\"\r\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET\"\r\n\r\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\"\r\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\"\r\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\"\r\nexport const USER_LIST_RESET = \"USER_LIST_RESET\"\r\n\r\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\"\r\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\"\r\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\"\r\n\r\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\"\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\"\r\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\"\r\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\"\r\n","import {\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_RESET,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_ALL_SUCCESS,\r\n  ORDER_LIST_ALL_FAIL,\r\n  ORDER_LIST_ALL_REQUEST,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_RESET,\r\n} from \"../constants/orderContants\"\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      }\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, order: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n\r\n        order: action.payload,\r\n      }\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      }\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_PAY_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      }\r\n    case ORDER_DELIVER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_DELIVER_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_LIST_MY_RESET:\r\n      return { orders: [] }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderListAllReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_ALL_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_LIST_ALL_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case ORDER_LIST_ALL_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\"\r\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\"\r\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\"\r\n\r\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\"\r\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\"\r\nexport const ORDER_DETAILS_FAIL = \"ORDER_DETAILS_FAIL\"\r\n\r\nexport const ORDER_PAY_REQUEST = \"ORDER_PAY_REQUEST\"\r\nexport const ORDER_PAY_SUCCESS = \"ORDER_PAY_SUCCESS\"\r\nexport const ORDER_PAY_FAIL = \"ORDER_PAY_FAIL\"\r\nexport const ORDER_PAY_RESET = \"ORDER_PAY_RESET\"\r\n\r\nexport const ORDER_LIST_MY_REQUEST = \"ORDER_LIST_MY_REQUEST\"\r\nexport const ORDER_LIST_MY_SUCCESS = \"ORDER_LIST_MY_SUCCESS\"\r\nexport const ORDER_LIST_MY_FAIL = \"ORDER_LIST_MY_FAIL\"\r\nexport const ORDER_LIST_MY_RESET = \"ORDER_LIST_MY_RESET\"\r\n\r\nexport const ORDER_LIST_ALL_REQUEST = \"ORDER_LIST_ALL_REQUEST\"\r\nexport const ORDER_LIST_ALL_SUCCESS = \"ORDER_LIST_ALL_SUCCESS\"\r\nexport const ORDER_LIST_ALL_FAIL = \"ORDER_LIST_ALL_FAIL\"\r\n\r\nexport const ORDER_DELIVER_REQUEST = \"ORDER_DELIVER_REQUEST\"\r\nexport const ORDER_DELIVER_SUCCESS = \"ORDER_DELIVER_SUCCESS\"\r\nexport const ORDER_DELIVER_FAIL = \"ORDER_DELIVER_FAIL\"\r\nexport const ORDER_DELIVER_RESET = \"ORDER_DELIVER_RESET\"\r\n","import React, { useState } from \"react\"\r\nimport { Form, Button } from \"react-bootstrap\"\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState(\"\")\r\n  const SubmitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}`)\r\n    } else {\r\n      history.push(\"/\")\r\n    }\r\n  }\r\n  return (\r\n    <Form onSubmit={SubmitHandler} inline>\r\n      <Form.Control\r\n        type='text'\r\n        name='q'\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n        placeholder='Buscar productos...'\r\n        className='mr-sm-2 ml-sm-5  bg-green borderwhite heightsearch'\r\n      ></Form.Control>\r\n      <Button type='submit' variant='outline-success' className='clear heightsearch btnsearch'>\r\n        Encontrar\r\n      </Button>\r\n      \r\n      \r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SearchBox\r\n","import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_LOGOUT,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n} from \"../constants/userConstants\"\r\nimport axios from \"axios\"\r\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderContants\"\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users/login\",\r\n      { email, password },\r\n      config\r\n    )\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\")\r\n  dispatch({\r\n    type: USER_LOGIN_LOGOUT,\r\n  })\r\n  dispatch({\r\n    type: ORDER_LIST_MY_RESET,\r\n  })\r\n  dispatch({\r\n    type: USER_DETAILS_RESET,\r\n  })\r\n\r\n  dispatch({\r\n    type: USER_LIST_RESET,\r\n  })\r\n}\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users\",\r\n      { name, email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    })\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    })\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users`, config)\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteUsers = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n    await axios.delete(`/api/users/${id}`, config)\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n    })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport { Route } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { LinkContainer } from \"react-router-bootstrap\"\r\nimport { Navbar, Nav, Container, NavDropdown ,Image} from \"react-bootstrap\"\r\nimport SearchBox from \"../components/SearchBox\"\r\nimport { logout } from \"../actions/userActions\"\r\n \r\n\r\nfunction Header() {\r\n  const dispatch = useDispatch()\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <Navbar className=' bg-green' variant='dark' expand='lg' collapseOnSelect>\r\n        <Container>\r\n         \r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Route\r\n              render={({ history }) => (\r\n                <SearchBox history={history}></SearchBox>\r\n              )}\r\n            ></Route>\r\n            <Nav className='ml-auto'>\r\n            <Nav.Link href=\"#home\">Sillas</Nav.Link>\r\n            <Nav.Link href=\"#link\">Oficina</Nav.Link>\r\n            <NavDropdown title=\"Salas\" id=\"basic-nav-dropdown\">\r\n            <NavDropdown.Item href=\"#action/3.1\">Matrimoniales</NavDropdown.Item>\r\n            <NavDropdown.Item href=\"#action/3.2\">Individuales</NavDropdown.Item>\r\n            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n            <NavDropdown.Divider />\r\n            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n            </NavDropdown>\r\n              <LinkContainer to='/cart'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-shopping-cart'></i>Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id='username'>\r\n                  <LinkContainer to='/profile'>\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to='/login'>\r\n                  <Nav.Link>\r\n                    <i className='fas fa-user'></i>Sing in\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title='Admin' id='adminmenu'>\r\n                  <LinkContainer to='/admin/userlist'>\r\n                    <NavDropdown.Item>users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item>product</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/orderlist'>\r\n                    <NavDropdown.Item>orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      \r\n \r\n    <div className=\"textos\">\r\n           <Image  src={process.env.PUBLIC_URL + '/lb.png'} fluid></Image>\r\n           \r\n            \r\n        </div>\r\n    </header>\r\n\r\n\r\n \r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\"\r\nimport { Container, Row, Col } from \"react-bootstrap\"\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n\r\n\r\n\r\n            \r\n\r\n        </Row>\r\n        \r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  {\r\n    value = !value ? \"\" : value\r\n  }\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? \"fas fa-star\"\r\n              : value >= (0.5 ? \"fas fa-star-half-alt\" : \"far fa-star\")\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? \"fas fa-star\"\r\n              : value >= (1.5 ? \"fas fa-star-half-alt\" : \"far fa-star\")\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? \"fas fa-star\"\r\n              : value >= 2.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? \"fas fa-star\"\r\n              : value >= 3.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? \"fas fa-star\"\r\n              : value >= 4.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nRating.defaultProps = {\r\n  color: \"#f8e825\",\r\n}\r\n\r\nRating.propTypes = {\r\n  //value: PropTypes.number.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string,\r\n}\r\nexport default Rating\r\n","import React from \"react\"\r\nimport { Card } from \"react-bootstrap\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Rating from \"./Rating\"\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Card className='my-3  rounded'>\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image.split(\",\")[0]} variant='top' />\r\n      </Link>\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as='div'>\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n\r\n        \r\n        <Card.Text as='h5'>${product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Product\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { Alert } from \"react-bootstrap\"\r\n\r\nconst Message = ({ variant, children, booltemporary = false }) => {\r\n  const [show, setShow] = useState(true)\r\n\r\n  useEffect(() => {\r\n    const timeoutID = window.setTimeout(() => {\r\n      if (booltemporary) {\r\n        setShow(false)\r\n        console.log(\"entra\")\r\n      }\r\n    }, 3000)\r\n\r\n    return () => window.clearTimeout(timeoutID)\r\n  }, [])\r\n\r\n  return show ? (\r\n    <Alert variant={variant} onClose={() => setShow(false)} dismissible>\r\n      {children}\r\n    </Alert>\r\n  ) : (\r\n    \"\"\r\n  )\r\n}\r\n\r\nMessage.defaultProps = {\r\n  variant: \"info\",\r\n}\r\nexport default Message\r\n","import React from \"react\"\r\nimport { Spinner } from \"react-bootstrap\"\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        width: \"100px\",\r\n        height: \"100px\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n      }}\r\n    >\r\n      <span className='sr-only'></span>\r\n    </Spinner>\r\n  )\r\n}\r\nexport default Loader\r\n","import React from \"react\"\r\n\r\nimport { Pagination } from \"react-bootstrap\"\r\nimport { LinkContainer } from \"react-router-bootstrap\"\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = \"\" }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                  ? `/search/${keyword}/page/${x + 1}`\r\n                  : `/page/${x + 1}`\r\n                : `/admin/productlist/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Paginate\r\n","import React from \"react\"\r\nimport { Helmet } from \"react-helmet\"\r\nconst Meta = ({ title, descripcion, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={descripcion} />\r\n      <meta name='keywords' content={keywords} />\r\n    </Helmet>\r\n  )\r\n}\r\nMeta.defaultProps = {\r\n  title: \"Bienvenido\",\r\n  descripcion: \"\",\r\n  keywords: \"\",\r\n}\r\nexport default Meta\r\n","import {\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from \"../constants/productConstants\"\r\nimport axios from \"axios\"\r\nexport const listProducts = (keyword = \"\", pageNumber = \"\") => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST })\r\n    const { data } = await axios.get(\r\n      `/api/products/?keyword=${keyword}&pageNumber=${pageNumber}`\r\n    )\r\n\r\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/products/${id}`, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n    })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/products/`, {}, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST,\r\n    })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  console.log(review)\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n    })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_TOP_REQUEST })\r\n    const { data } = await axios.get(`/api/products/top`)\r\n\r\n    dispatch({ type: PRODUCT_TOP_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React, { useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Carousel, Image } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Loader from \"./Loader\"\r\nimport Message from \"./Message\"\r\nimport { listTopProducts } from \"../actions/productAction\"\r\n\r\nconst ProductCarousel = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const productTopRated = useSelector((state) => state.productTopRated)\r\n  const { loading, error, products } = productTopRated\r\n\r\n  useEffect(() => {\r\n    dispatch(listTopProducts())\r\n  }, [dispatch])\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <Carousel pause=' py-2 hover'  >\r\n      {products.length > 0\r\n        ? products.map((product) => (\r\n            <Carousel.Item key={product._id}>              \r\n                <Link to={`/product/${product._id}`}>\r\n                  <Image src={product.image.split(\",\")[0]} alt={product.name} fluid />\r\n                  <Carousel.Caption className='carousel-caption'>\r\n                    <h2>\r\n                      {product.name} (${product.price})\r\n                    </h2>\r\n                  </Carousel.Caption>\r\n                </Link>\r\n              \r\n            </Carousel.Item>\r\n          ))\r\n        : \"\"}\r\n    </Carousel>\r\n  )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, { useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Row, Col ,Card} from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Product from \"../components/Product\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport Paginate from \"../components/Paginate\"\r\nimport Meta from \"../components/Meta\"\r\nimport { listProducts } from \"../actions/productAction\"\r\nimport ProductCarouserl from \"../components/ProductCarouserl\"\r\n \r\nimport {Helmet} from 'react-helmet';\r\nconst HomeScreen = ({ match }) => {\r\n  const keyword = match.params.keyword\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, page, pages } = productList\r\n  console.log(products)\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword, pageNumber))\r\n  }, [dispatch, keyword, pageNumber])\r\nconsole.log(process.env.PUBLIC_URL)\r\nconsole.log(\"process.env.PUBLIC_URL\")\r\n  return (\r\n    <>\r\n      <Meta></Meta>\r\n      {!keyword ? (\r\n        <ProductCarouserl></ProductCarouserl>\r\n      ) : (\r\n        <Link to='/' className='btn btn-light'>\r\n          Regresar\r\n        </Link>\r\n      )}\r\n\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n\r\n     \r\n          <Row>\r\n            {products\r\n              ? products.map((product, index) => (\r\n                  <Col sm={12} md={6} lg={4} xl={3} key={index}>\r\n                    <Product product={product} key={product._id.toString()} />\r\n                  </Col>\r\n                ))\r\n              : \"\"}\r\n          </Row>\r\n\r\n          <Row  >\r\n            <Col xs={6} sm={6} md={6} lg={6} xl={6} className='flexx '>\r\n            <Link to={`/tipoo/1/nivel/3`}>\r\n              <Card.Img\r\n                className='card-1'\r\n                src={\"images/s1.jpg\"}\r\n              ></Card.Img>\r\n              </Link>\r\n            </Col>\r\n          <Col xs={6}  sm={6} md={6} lg={6} xl={6} className='flexx '>\r\n            <Link to={`/tipoo/2/nivel/3`}>\r\n              <Card.Img\r\n                className='card-1'\r\n                src=\"images/s2.jpg\"\r\n              ></Card.Img>\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n          <Row  >\r\n            <Col xs={6} sm={6} md={6} lg={6} xl={6} className='flexx '>\r\n            <Link to={`/tipoo/1/nivel/3`}>\r\n              <Card.Img\r\n                className='card-1'\r\n                src={\"images/s3.jpg\"}\r\n              ></Card.Img>\r\n              </Link>\r\n            </Col>\r\n          <Col xs={6}  sm={6} md={6} lg={6} xl={6} className='flexx '>\r\n            <Link to={`/tipoo/2/nivel/3`}>\r\n              <Card.Img\r\n                className='card-1'\r\n                src=\"images/s4.jpg\"\r\n              ></Card.Img>\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyword={keyword ? keyword : \"\"}\r\n          ></Paginate>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport SliderImage from \"react-zoom-slider\"\r\n\r\nconst ImageZoom = (images) => {\r\n  var data = {}\r\n  var tempData = []\r\n  const data3 = [\r\n    {\r\n      image:\r\n        \"https://cdn.tgdd.vn/Products/Images/42/209800/oppo-reno2-f-xanh-1-org.jpg\",\r\n      text: \"img1\",\r\n    },\r\n    {\r\n      image:\r\n        \"https://cdn.tgdd.vn/Products/Images/42/209800/oppo-reno2-f-xanh-4-org.jpg\",\r\n      text: \"img2\",\r\n    },\r\n    {\r\n      image:\r\n        \"https://cdn.tgdd.vn/Products/Images/42/209800/oppo-reno2-f-xanh-10-org.jpg\",\r\n      text: \"img3\",\r\n    },\r\n  ]\r\n\r\n  if (images.images) {\r\n    var imagesarraystring = images.images.substring(0, images.images.length - 1)\r\n    const imagesArray = imagesarraystring.split(\",\")\r\n    imagesArray.forEach((string) => {\r\n      var data1 = {}\r\n      console.log(\"foreach\")\r\n      data1[\"image\"] = string\r\n      data1[\"text\"] = \"\"\r\n\r\n      tempData.push(data1)\r\n    })\r\n    data = tempData\r\n  }\r\n  console.log(tempData)\r\n  return (\r\n    <>\r\n      {tempData.length > 0 ? (\r\n        <SliderImage\r\n          data={data}\r\n          width='100%'\r\n          showDescription={true}\r\n          direction='rigth'\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nImageZoom.propTypes = {\r\n  images: PropTypes.string,\r\n}\r\nexport default ImageZoom\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  ListGroupItem,\r\n  Form,\r\n} from \"react-bootstrap\"\r\nimport Rating from \"../components/Rating\"\r\nimport Message from \"../components/Message\"\r\nimport Meta from \"../components/Meta\"\r\nimport Loader from \"../components/Loader\"\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from \"../actions/productAction\"\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\"\r\nimport ImageZoom from \"../components/ImageZoom\"\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1)\r\n  const [rating, setRating] = useState(0)\r\n  const [comment, setComment] = useState(\"\")\r\n  //const [data, setData] = useState(\"\")\r\n  const dispatch = useDispatch()\r\n\r\n  const productDatails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDatails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\r\n  const {\r\n    success: successProductReview,\r\n    error: errorProductReview,\r\n  } = productReviewCreate\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      alert(\"review submitted\")\r\n      setRating(0)\r\n      setComment(\"\")\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n    } else {\r\n    }\r\n\r\n    dispatch(listProductDetails(match.params.id))\r\n  }, [dispatch, match, successProductReview])\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    dispatch(createProductReview(match.params.id, { rating, comment }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link className='btn btn-light my-4' to='/'>\r\n        Regresar\r\n      </Link>\r\n\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <Message variant='danger' booltemporary='false'>\r\n          {error}\r\n        </Message>\r\n      ) : (\r\n        <>\r\n          <Meta title={product.name}></Meta>\r\n          <Row  >\r\n            <Col md={7}>\r\n              <ImageZoom images={product.image}></ImageZoom>\r\n            </Col>\r\n\r\n              <Col md={5}>\r\n              <Row>\r\n                <Col  md={6}>\r\n                  <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                  <h2>{product.name}</h2>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                  <Rating\r\n                  value={product.rating}\r\n                  text={`${product.numReviews} reseñas`}\r\n                  ></Rating>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>Precio:${product.price}</ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                  Descripción:{product.description}\r\n                  </ListGroup.Item>\r\n                  </ListGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                <Card>\r\n                <ListGroup>\r\n                <ListGroup.Item>\r\n                <Row>\r\n                <Col> Precio:</Col>\r\n                <Col>\r\n                <strong> ${product.price}</strong>\r\n                </Col>\r\n                </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                <Row>\r\n                <Col> Intentario:</Col>\r\n                <Col>\r\n                {product.countStock > 0\r\n                ? \"Existencia\"\r\n                : \"Fuera de existencia\"}\r\n                </Col>\r\n                </Row>\r\n                </ListGroup.Item>\r\n                {product.countStock > 0 && (\r\n                <ListGroupItem>\r\n                <Row>\r\n                <Col>#</Col>\r\n                <Col>\r\n                <Form.Control as='select' value={qty} onChange={(e) => setQty(e.target.value)}>              \r\n                {[...Array(product.countInStock).keys()].map(\r\n                (x) => (\r\n                <option key={x + 1} value={x + 1}> {x + 1}  </option>                               \r\n                )\r\n                )}\r\n                </Form.Control>\r\n                </Col>\r\n                </Row>\r\n                </ListGroupItem>\r\n                )}\r\n               \r\n                </ListGroup>\r\n                </Card>\r\n                </Col>\r\n              \r\n              </Row>\r\n             <Row  className=\" mt-3\">\r\n                  <Col>\r\n                  <Button onClick={addToCartHandler} className='btn-block' type='button' disabled={product.countInStock === 0}>                \r\n                    Add to cart\r\n                </Button>\r\n                  </Col>\r\n\r\n             </Row>\r\n            </Col>\r\n           \r\n                           \r\n          </Row>\r\n           \r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from \"axios\"\r\n\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from \"../constants/cartConstants\"\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  })\r\n\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  })\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  })\r\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data))\r\n}\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  })\r\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data))\r\n}\r\n","import React, { useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\"\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1\r\n\r\n  const dispatch = useDispatch()\r\n  const cart = useSelector((state) => state.cart)\r\n  const { cartItems } = cart\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty))\r\n    }\r\n  }, [dispatch, productId, qty])\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n    history.push(\"/login?redirect=shipping\")\r\n  }\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>shopping cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            your cart is empty<Link to='/'>Regresar</Link>{\" \"}\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image\r\n                      src={item.image}\r\n                      alt={item.name}\r\n                      fluid\r\n                      rounded\r\n                    ></Image>\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.producto}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    {\" \"}\r\n                    <Form.Control\r\n                      as='select'\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                Items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                proceed to Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from \"react\"\r\nimport { Container, Row, Col } from \"react-bootstrap\"\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport { login } from \"../actions/userActions\"\r\nimport FormContainer from \"../components/FormContainer\"\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\"\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    dispatch(login(email, password))\r\n  }\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sing In</h1>\r\n      {error && (\r\n        <Message variant='danger' booltemporary='true'>\r\n          {error}\r\n        </Message>\r\n      )}\r\n      {loading && <Loader></Loader>}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Addres</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter Email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type='submit' variant='primary'>\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Customer?{\" \"}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : \"/register\"}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport { register } from \"../actions/userActions\"\r\nimport FormContainer from \"../components/FormContainer\"\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\")\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [confirmPassword, setconfirmPassword] = useState(\"\")\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\"\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\")\r\n    } else {\r\n      dispatch(register(name, email, password))\r\n    }\r\n  }\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sing Up</h1>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader></Loader>}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter Name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Addres</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter Email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='confirmpassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter confirmPassword'\r\n            value={confirmPassword}\r\n            onChange={(e) => setconfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n      <Row className='py-3'>\r\n        <Col>\r\n          have an account?{\" \"}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from \"react\"\r\n\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\"\r\nimport { LinkContainer } from \"react-router-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\"\r\nimport { listMyOrders } from \"../actions/orderActions\"\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\"\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\")\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [confirmPassword, setconfirmPassword] = useState(\"\")\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy)\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\")\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n        dispatch(getUserDetails(\"profile\"))\r\n        dispatch(listMyOrders())\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\")\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n    }\r\n  }\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User profile</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {success && <Message variant='success'>Profile Updated</Message>}\r\n        {loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='name'>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type='name'\r\n              placeholder='Enter Name'\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email Addres</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Enter Email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Enter password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='confirmpassword'>\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Enter confirmPassword'\r\n              value={confirmPassword}\r\n              onChange={(e) => setconfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button type='submit' variant='primary'>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader></Loader>\r\n        ) : errorOrders ? (\r\n          <Message variant='danger'>{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DAte</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className='btn-sm' variant='light'>\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from \"axios\"\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_ALL_REQUEST,\r\n  ORDER_LIST_ALL_SUCCESS,\r\n  ORDER_LIST_ALL_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_FAIL,\r\n} from \"../constants/orderContants\"\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${orderId}/pay`,\r\n      paymentResult,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST,\r\n    })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listMyOrders = (orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listAllOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_ALL_REQUEST,\r\n    })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_ALL_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_ALL_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport { Nav } from \"react-bootstrap\"\r\nimport { LinkContainer } from \"react-router-bootstrap\"\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to='/login'>\r\n            <Nav.Link>Sign in</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign in</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to='/shipping'>\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to='/payment'>\r\n            <Nav.Link>payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to='/placeorder'>\r\n            <Nav.Link>place order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>place order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from \"react\"\r\nimport { Form, Button } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport CheckoutSteps from \"../components/CheckoutSteps\"\r\n\r\nimport { saveShippingAddress } from \"../actions/cartActions\"\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address)\r\n  const [city, setCity] = useState(shippingAddress.city)\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n  const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n  const dispatch = useDispatch()\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n    history.push(\"/payment\")\r\n  }\r\n  return (\r\n    <FormContainer>\r\n      <h1>Shipping</h1>\r\n      <CheckoutSteps step1 step2></CheckoutSteps>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter Address'\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter City'\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>POstal Code</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter POstal code'\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter Country'\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from \"react\"\r\nimport { Form, Button, Col } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport CheckoutSteps from \"../components/CheckoutSteps\"\r\n\r\nimport { savePaymentMethod } from \"../actions/cartActions\"\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  if (!shippingAddress) {\r\n    history.push(\"/shipping\")\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(\"Paypal\")\r\n\r\n  const dispatch = useDispatch()\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(savePaymentMethod(paymentMethod))\r\n    history.push(\"/placeorder\")\r\n  }\r\n  return (\r\n    <FormContainer>\r\n      <h1>Payment Method</h1>\r\n      <CheckoutSteps step3></CheckoutSteps>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as='legend'>Select Method</Form.Label>\r\n\r\n          <Col>\r\n            <Form.Check\r\n              type='radio'\r\n              label='Paypal or Credit Card'\r\n              id='PayPal'\r\n              name='paymentMethod'\r\n              value='Paypal'\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            {/* <Form.Check\r\n              type='radio'\r\n              label='Stripe'\r\n              id='Stripe'\r\n              name='paymentMethod'\r\n              value='Stripe'\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>*/}\r\n          </Col>\r\n        </Form.Group>\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from \"react\"\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport Message from \"../components/Message\"\r\nimport CheckoutSteps from \"../components/CheckoutSteps\"\r\n\r\nimport { createOrder } from \"../actions/orderActions\"\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n  const cart = useSelector((state) => state.cart)\r\n\r\n  // calculate prices\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2)\r\n  }\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems\r\n      .reduce((acc, item) => (acc + item.price) * item.qty, 0)\r\n      .toFixed(2)\r\n  )\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2)\r\n  const orderCreate = useSelector((state) => state.orderCreate)\r\n  const { order, success, error } = orderCreate\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success])\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        itemsPrice: cart.itemsPrice,\r\n        paymentMethod: cart.paymentMethod,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4></CheckoutSteps>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address</strong>\r\n                {cart.shippingAddress.address},, {cart.shippingAddress.city},{\" \"}\r\n                {cart.shippingAddress.postalcode},,{\" \"}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method:</strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>You cart es empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          ></Image>\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty}x ${item.price}= ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order{\" \"}\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { Row, Col, ListGroup, Image, Card, Button } from \"react-bootstrap\"\r\nimport axios from \"axios\"\r\nimport { PayPalButton } from \"react-paypal-button-v2\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from \"../actions/orderActions\"\r\nimport {\r\n  ORDER_DELIVER_RESET,\r\n  ORDER_PAY_RESET,\r\n} from \"../constants/orderContants\"\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id\r\n\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n  const dispatch = useDispatch()\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const orderPay = useSelector((state) => state.orderPay)\r\n  const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver)\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n  if (!loading) {\r\n    // calculate prices\r\n\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems\r\n        .reduce((acc, item) => (acc + item.price) * item.qty, 0)\r\n        .toFixed(2)\r\n    )\r\n  }\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\")\r\n    }\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get(\"/api/config/paypal\")\r\n      const script = document.createElement(\"script\")\r\n      script.type = \"text/javascript\"\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}&currency=MXN&locale=es_MX`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n\r\n      document.body.appendChild(script)\r\n    }\r\n    //order._id !== orderId ||\r\n\r\n    if (!order || successPay || successDeliver || order._id !== orderId) {\r\n      dispatch({ type: ORDER_PAY_RESET })\r\n      dispatch({ type: ORDER_DELIVER_RESET })\r\n      dispatch(getOrderDetails(orderId))\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript()\r\n      } else {\r\n        setSdkReady(true)\r\n      }\r\n    }\r\n  }, [dispatch, order, successPay, orderId, successDeliver])\r\n  const successPaymentHandler = (paymentResult) => {\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order))\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader></Loader>\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order:{order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name:</strong>\r\n                {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email:</strong>{\" \"}\r\n                <a href={`mailto:${order.user.email}`}> {order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address</strong>\r\n                {order.shippingAddress.address},, {order.shippingAddress.city},{\" \"}\r\n                {order.shippingAddress.postalcode},,{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.DeliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method:</strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          ></Image>\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty}x ${item.price}= ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader></Loader>}\r\n                  {!sdkReady ? (\r\n                    <Loader></Loader>\r\n                  ) : (\r\n                    <PayPalButton\r\n                      currency={\"MXN\"}\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    ></PayPalButton>\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader></Loader>}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark as delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect } from \"react\"\r\nimport { LinkContainer } from \"react-router-bootstrap\"\r\nimport { Table, Button } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport { listUsers, deleteUsers } from \"../actions/userActions\"\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n  const userList = useSelector((state) => state.userList)\r\n  const { loading, error, users } = userList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userDelete = useSelector((state) => state.userDelete)\r\n  const { success: successDelete } = userDelete\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers())\r\n    } else {\r\n      history.push(\"/login\")\r\n    }\r\n  }, [dispatch, history, userInfo, successDelete])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure\")) {\r\n      dispatch(deleteUsers(id))\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Name</th>\r\n              <th>email</th>\r\n              <th>Admin</th>\r\n              <th></th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className='fas  fa-check' style={{ color: \"green\" }}>\r\n                      {\" \"}\r\n                    </i>\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n                <td>\r\n                  <Button\r\n                    variant='danger'\r\n                    className='btn-sm'\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Form, Button } from \"react-bootstrap\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport { getUserDetails, updateUser } from \"../actions/userActions\"\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\"\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id\r\n\r\n  const [name, setName] = useState(\"\")\r\n  const [email, setEmail] = useState(\"\")\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET })\r\n      history.push(\"/admin/userlist\")\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n        setIsAdmin(user.isAdmin)\r\n      }\r\n    }\r\n  }, [dispatch, history, userId, user, successUpdate])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n  }\r\n  return (\r\n    <>\r\n      <Link to='/admin/userList' className='btn btn-ligth my-3'>\r\n        Regresar\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader></Loader>\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter Name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Addres</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter Email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isAdmin'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='is admin'\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from \"react\"\r\nimport { LinkContainer } from \"react-router-bootstrap\"\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport Paginate from \"../components/Paginate\"\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from \"../actions/productAction\"\r\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\"\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const PageNumber = match.params.pageNumber || 1\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, pages, page } = productList\r\n\r\n  const productDelete = useSelector((state) => state.productDelete)\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete\r\n\r\n  const productCreate = useSelector((state) => state.productCreate)\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n    if (!userInfo.isAdmin) {\r\n      history.push(\"/login\")\r\n    }\r\n\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`)\r\n    } else {\r\n      dispatch(listProducts(\"\", PageNumber))\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    PageNumber,\r\n  ])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure\")) {\r\n      dispatch(deleteProduct(id))\r\n    }\r\n  }\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct())\r\n  }\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={createProductHandler}>\r\n            <i className='fas fa-plus'></i>Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader></Loader>}\r\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n      {loadingCreate && <Loader></Loader>}\r\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Name</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                  <td>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true}></Paginate>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Form, Button } from \"react-bootstrap\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport { listProductDetails, updateProduct } from \"../actions/productAction\"\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\"\r\nimport axios from \"axios\"\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const [name, setName] = useState(\"\")\r\n  const [price, setPrice] = useState(0)\r\n  const [image, setImage] = useState([])\r\n  const [brand, setBrand] = useState(\"\")\r\n  const [category, setCategory] = useState(\"\")\r\n  const [countStock, setCountStock] = useState(0)\r\n  const [description, setDescription] = useState(0)\r\n  const [uploding, setUpLoading] = useState(false)\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET })\r\n      history.push(\"/admin/productList\")\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId))\r\n      } else {\r\n        setName(product.name)\r\n        setPrice(product.price)\r\n        setImage(...image, product.image)\r\n        setBrand(product.brand)\r\n        setCategory(product.category)\r\n        setCountStock(product.countStock)\r\n        setDescription(product.description)\r\n      }\r\n    }\r\n  }, [dispatch, history, productId, product, successUpdate])\r\n\r\n  const UploadFileHandler = async (e) => {\r\n    const files = e.target.files\r\n    let images = \"\"\r\n    for (let i = 0; i < files.length; i++) {\r\n      const file = files[i]\r\n      const formData = new FormData()\r\n      formData.append(\"image\", file)\r\n      setUpLoading(true)\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        }\r\n        const { data } = await axios.post(\"/api/upload\", formData, config)\r\n\r\n        images += data + \",\"\r\n        console.log(images)\r\n        setImage(images)\r\n        setUpLoading(false)\r\n      } catch (error) {\r\n        console.error(error)\r\n        setUpLoading(false)\r\n      }\r\n    }\r\n  }\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        brand,\r\n        category,\r\n        description,\r\n        countStock,\r\n        image,\r\n      })\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      <Link to='/admin/productList' className='btn btn-ligth my-3'>\r\n        Regresar\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit product</h1>\r\n\r\n        {loadingUpdate && <Loader></Loader>}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate} </Message>}\r\n        {loading ? (\r\n          <Loader></Loader>\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter Name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>price Addres</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter price'\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image URL'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose Fie'\r\n                custom\r\n                multiple\r\n                onChange={UploadFileHandler}\r\n              ></Form.File>\r\n              {uploding && <Loader></Loader>}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='brand'>\r\n              <Form.Label>brand</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter brand  '\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='countInStock'>\r\n              <Form.Label>countInStock</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter countInStock URL'\r\n                value={countStock}\r\n                onChange={(e) => setCountStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>category</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter category URL'\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description URL'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, { useEffect } from \"react\"\r\nimport { LinkContainer } from \"react-router-bootstrap\"\r\nimport { Table, Button } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport { listAllOrders } from \"../actions/orderActions\"\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n  const orderListAll = useSelector((state) => state.orderListAll)\r\n  const { loading, error, orders } = orderListAll\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listAllOrders())\r\n    } else {\r\n      history.push(\"/login\")\r\n    }\r\n  }, [dispatch, history, userInfo])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure\")) {\r\n      // dispatch(deleteUsers(id))\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>user</th>\r\n              <th>date</th>\r\n              <th>total</th>\r\n              <th>paid</th>\r\n              <th>deliver</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>{order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(10)\r\n                  ) : (\r\n                    <i className='fas fa-times'></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDeliverd ? (\r\n                    order.deliverdAt.substring(10)\r\n                  ) : (\r\n                    <i className='fas fa-times'></i>\r\n                  )}\r\n                </td>\r\n\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React from \"react\"\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport Header from \"./components/Header\"\r\nimport Footer from \"./components/Footer\"\r\nimport HomeScreen from \"./screens/HomeScreen\"\r\nimport ProductScreen from \"./screens/ProductScreen\"\r\nimport CartScreen from \"./screens/CartScreen\"\r\nimport LoginScreen from \"./screens/LoginScreen\"\r\nimport RegisterScreen from \"./screens/RegisterScreen\"\r\nimport ProfileScreen from \"./screens/profileScreen\"\r\nimport ShippingScreen from \"./screens/ShippingScreen\"\r\nimport PaymentScreen from \"./screens/PaymentScreen\"\r\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\"\r\nimport OrderScreen from \"./screens/OrderScreen\"\r\nimport UserListScreen from \"./screens/UserListScreen\"\r\nimport UserEditScreen from \"./screens/userEditScreen\"\r\nimport ProductListScreen from \"./screens/ProductListScreen\"\r\nimport ProductEditScreen from \"./screens/ProductEditScreen\"\r\nimport OrderListScreen from \"./screens/OrderListScreen\"\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Header></Header>\r\n      <main >\r\n        <Container>\r\n          <Route path='/login' component={LoginScreen} exact></Route>\r\n          <Route path='/placeorder' component={PlaceOrderScreen} exact></Route>\r\n          <Route path='/order/:id' component={OrderScreen} exact></Route>\r\n          <Route path='/shipping' component={ShippingScreen} exact></Route>\r\n          <Route path='/payment' component={PaymentScreen} exact></Route>\r\n          <Route path='/register' component={RegisterScreen} exact></Route>\r\n          <Route path='/profile' component={ProfileScreen} exact></Route>\r\n          <Route path='/product/:id' component={ProductScreen}></Route>\r\n          <Route path='/cart/:id?' component={CartScreen}></Route>\r\n          <Route path='/admin/userList' component={UserListScreen}></Route>\r\n          <Route\r\n            path='/admin/ProductList'\r\n            component={ProductListScreen}\r\n            exact\r\n          ></Route>\r\n          <Route\r\n            path='/admin/ProductList/:pageNumber'\r\n            component={ProductListScreen}\r\n            exact\r\n          ></Route>\r\n          <Route path='/admin/user/:id/edit' component={UserEditScreen}></Route>\r\n          <Route\r\n            path='/admin/product/:id/edit'\r\n            component={ProductEditScreen}\r\n          ></Route>\r\n          <Route path='/admin/orderlist' component={OrderListScreen}></Route>\r\n          <Route path='/search/:keyword' component={HomeScreen} exact></Route>\r\n          <Route path='/' component={HomeScreen} exact></Route>\r\n          <Route path='/page/:pageNumber' component={HomeScreen} exact></Route>\r\n          <Route\r\n            path='/search/:keyword/page/:pageNumber'\r\n            component={HomeScreen}\r\n            exact\r\n          ></Route>\r\n        </Container>\r\n      </main>\r\n      <Footer></Footer>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport store from \"./store\";\r\nimport \"./index.css\";\r\nimport \"./bootstrap.min.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}