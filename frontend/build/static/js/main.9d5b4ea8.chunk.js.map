{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducer.js","constants/orderContants.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","components/Meta.js","actions/productAction.js","components/ProductCarouserl.js","screens/HomeScreen.js","components/ImageZoom.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/profileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/userEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderPay","orderListMy","orders","orderListAll","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","class","href","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useDispatch","useSelector","Navbar","expand","collapseOnSelect","Container","to","src","alt","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","pathname","Rating","text","color","style","defaultProps","Product","Card","_id","Img","image","split","Body","Title","as","Text","rating","numReviews","price","Message","children","booltemporary","show","setShow","useEffect","timeoutID","window","setTimeout","console","log","clearTimeout","Alert","onClose","dismissible","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","key","active","Meta","descripcion","keywords","Helmet","content","listProducts","pageNumber","listProductDetails","ProductCarousel","Carousel","pause","length","Image","Caption","HomeScreen","match","params","ProductCarouserl","index","sm","md","lg","xl","toString","ImageZoom","images","tempData","substring","forEach","string","data1","showDescription","direction","ProductScreen","qty","setQty","setRating","comment","setComment","productDatails","successProductReview","errorProductReview","alert","ListGroup","description","countInStock","ListGroupItem","disabled","review","createdAt","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","removeFromCartHandler","removeFromCart","fluid","rounded","producto","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setconfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","postalcode","createOrder","orderItems","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","paypal","DeliveredAt","currency","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUsers","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","PageNumber","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploding","setUpLoading","UploadFileHandler","files","i","file","formData","FormData","append","updateProduct","File","custom","multiple","OrderListScreen","isDeliverd","deliverdAt","App","path","component","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.9d5b4ea8.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\n\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer,\r\n} from \"./reducers/productReducers\"\r\nimport { cartReducer } from \"./reducers/cartReducers\"\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from \"./reducers/userReducers\"\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderListMyReducer,\r\n  orderListAllReducer,\r\n  orderDeliverReducer,\r\n} from \"./reducers/orderReducer\"\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderListAll: orderListAllReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\r\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n  : {}\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n}\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import {\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n  PRODUCT_TOP_RESET,\r\n  PRODUCT_TOP_REQUEST,\r\n} from \"../constants/productConstants\"\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.products,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page,\r\n      }\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const productDetailsReducer = (\r\n  state = { product: { reviews: [] } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { loading: true, ...state }\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload }\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_TOP_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_TOP_SUCCESS:\r\n      return { loading: false, products: action.payload }\r\n    case PRODUCT_TOP_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\"\r\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\"\r\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\"\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\"\r\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\"\r\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\"\r\n\r\nexport const PRODUCT_DELETE_REQUEST = \"PRODUCT_DELETE_REQUEST\"\r\nexport const PRODUCT_DELETE_SUCCESS = \"PRODUCT_DELETE_SUCCESS\"\r\nexport const PRODUCT_DELETE_FAIL = \"PRODUCT_DELETE_FAIL\"\r\n\r\nexport const PRODUCT_CREATE_REQUEST = \"PRODUCT_CREATE_REQUEST\"\r\nexport const PRODUCT_CREATE_SUCCESS = \"PRODUCT_CREATE_SUCCESS\"\r\nexport const PRODUCT_CREATE_FAIL = \"PRODUCT_CREATE_FAIL\"\r\nexport const PRODUCT_CREATE_RESET = \"PRODUCT_CREATE_RESET\"\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = \"PRODUCT_UPDATE_REQUEST\"\r\nexport const PRODUCT_UPDATE_SUCCESS = \"PRODUCT_UPDATE_SUCCESS\"\r\nexport const PRODUCT_UPDATE_FAIL = \"PRODUCT_UPDATE_FAIL\"\r\nexport const PRODUCT_UPDATE_RESET = \"PRODUCT_UPDATE_RESET\"\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = \"PRODUCT_CREATE_REVIEW_REQUEST\"\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = \"PRODUCT_CREATE_REVIEW_SUCCESS\"\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = \"PRODUCT_CREATE_REVIEW_FAIL\"\r\nexport const PRODUCT_CREATE_REVIEW_RESET = \"PRODUCT_CREATE_REVIEW_RESET\"\r\n\r\nexport const PRODUCT_TOP_REQUEST = \"PRODUCT_TOP_REQUEST\"\r\nexport const PRODUCT_TOP_SUCCESS = \"PRODUCT_TOP_SUCCESS\"\r\nexport const PRODUCT_TOP_FAIL = \"PRODUCT_TOP_FAIL\"\r\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n} from \"../constants/cartConstants\"\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload\r\n      const existItem = state.cartItems.find((x) => x.product === item.product)\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        }\r\n      }\r\n\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      }\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      }\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const CART_ADD_ITEM = \"CART_ADD_ITEM\"\r\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\"\r\nexport const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\"\r\nexport const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\"\r\n","import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_LOGOUT,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_RESET,\r\n  USER_UPDATE_PROFILE_RESET,\r\n} from \"../constants/userConstants\"\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true }\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGIN_LOGOUT:\r\n      return { loading: false }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true }\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload }\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload }\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true }\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload }\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LIST_RESET:\r\n      return { users: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_UPDATE_RESET:\r\n      return { user: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\"\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\"\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\"\r\nexport const USER_LOGIN_LOGOUT = \"USER_LOGIN_LOGOUT\"\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\"\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\"\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\"\r\n\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\"\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\"\r\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\"\r\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\"\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\"\r\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\"\r\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\"\r\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET\"\r\n\r\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\"\r\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\"\r\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\"\r\nexport const USER_LIST_RESET = \"USER_LIST_RESET\"\r\n\r\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\"\r\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\"\r\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\"\r\n\r\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\"\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\"\r\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\"\r\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\"\r\n","import {\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_RESET,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_ALL_SUCCESS,\r\n  ORDER_LIST_ALL_FAIL,\r\n  ORDER_LIST_ALL_REQUEST,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_RESET,\r\n} from \"../constants/orderContants\"\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      }\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, order: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n\r\n        order: action.payload,\r\n      }\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      }\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_PAY_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      }\r\n    case ORDER_DELIVER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_DELIVER_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_LIST_MY_RESET:\r\n      return { orders: [] }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderListAllReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_ALL_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_LIST_ALL_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case ORDER_LIST_ALL_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\"\r\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\"\r\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\"\r\n\r\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\"\r\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\"\r\nexport const ORDER_DETAILS_FAIL = \"ORDER_DETAILS_FAIL\"\r\n\r\nexport const ORDER_PAY_REQUEST = \"ORDER_PAY_REQUEST\"\r\nexport const ORDER_PAY_SUCCESS = \"ORDER_PAY_SUCCESS\"\r\nexport const ORDER_PAY_FAIL = \"ORDER_PAY_FAIL\"\r\nexport const ORDER_PAY_RESET = \"ORDER_PAY_RESET\"\r\n\r\nexport const ORDER_LIST_MY_REQUEST = \"ORDER_LIST_MY_REQUEST\"\r\nexport const ORDER_LIST_MY_SUCCESS = \"ORDER_LIST_MY_SUCCESS\"\r\nexport const ORDER_LIST_MY_FAIL = \"ORDER_LIST_MY_FAIL\"\r\nexport const ORDER_LIST_MY_RESET = \"ORDER_LIST_MY_RESET\"\r\n\r\nexport const ORDER_LIST_ALL_REQUEST = \"ORDER_LIST_ALL_REQUEST\"\r\nexport const ORDER_LIST_ALL_SUCCESS = \"ORDER_LIST_ALL_SUCCESS\"\r\nexport const ORDER_LIST_ALL_FAIL = \"ORDER_LIST_ALL_FAIL\"\r\n\r\nexport const ORDER_DELIVER_REQUEST = \"ORDER_DELIVER_REQUEST\"\r\nexport const ORDER_DELIVER_SUCCESS = \"ORDER_DELIVER_SUCCESS\"\r\nexport const ORDER_DELIVER_FAIL = \"ORDER_DELIVER_FAIL\"\r\nexport const ORDER_DELIVER_RESET = \"ORDER_DELIVER_RESET\"\r\n","import React, { useState } from \"react\"\r\nimport { Form, Button } from \"react-bootstrap\"\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState(\"\")\r\n  const SubmitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}`)\r\n    } else {\r\n      history.push(\"/\")\r\n    }\r\n  }\r\n  return (\r\n    <Form onSubmit={SubmitHandler} inline>\r\n      <Form.Control\r\n        type='text'\r\n        name='q'\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n        placeholder='Buscar productos...'\r\n        className='mr-sm-2 ml-sm-5'\r\n      ></Form.Control>\r\n      <Button type='submit' variant='outline-success' className='p-2 clear'>\r\n        Encontrar\r\n      </Button>\r\n      <a\r\n        class='linkw'\r\n        href='https://api.whatsapp.com/send?phone=525617740381&text=Hola%21%20Quisiera%20m%C3%A1s%20informaci%C3%B3n%20sobre%20DfMuebles%202.'\r\n        target='_blank'\r\n      >\r\n        <div class='nofloat'>\r\n          <i class='fab fa-whatsapp my-float2'></i>\r\n          <div class='ml notext'>5617740381</div>\r\n        </div>\r\n      </a>\r\n      <a\r\n        class='linkw'\r\n        href='https://api.whatsapp.com/send?phone=525543070021&text=Hola%21%20Quisiera%20m%C3%A1s%20informaci%C3%B3n%20sobre%20DfMuebles%202.'\r\n        target='_blank'\r\n      >\r\n        <div class='nofloat'>\r\n          <i class='fab fa-whatsapp my-float2'></i>\r\n          <div class='ml notext'>5543070021</div>\r\n        </div>\r\n      </a>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SearchBox\r\n","import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_LOGOUT,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n} from \"../constants/userConstants\"\r\nimport axios from \"axios\"\r\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderContants\"\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users/login\",\r\n      { email, password },\r\n      config\r\n    )\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\")\r\n  dispatch({\r\n    type: USER_LOGIN_LOGOUT,\r\n  })\r\n  dispatch({\r\n    type: ORDER_LIST_MY_RESET,\r\n  })\r\n  dispatch({\r\n    type: USER_DETAILS_RESET,\r\n  })\r\n\r\n  dispatch({\r\n    type: USER_LIST_RESET,\r\n  })\r\n}\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users\",\r\n      { name, email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    })\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    })\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users`, config)\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteUsers = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n    await axios.delete(`/api/users/${id}`, config)\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n    })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport { Route } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { LinkContainer, Image } from \"react-router-bootstrap\"\r\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\"\r\nimport SearchBox from \"../components/SearchBox\"\r\nimport { logout } from \"../actions/userActions\"\r\n\r\nfunction Header() {\r\n  const dispatch = useDispatch()\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <Navbar className='bg-green' variant='dark' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <img src='logo.jpeg' alt='logo' className='photo' />\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Route\r\n              render={({ history }) => (\r\n                <SearchBox history={history}></SearchBox>\r\n              )}\r\n            ></Route>\r\n            <Nav className='ml-auto'>\r\n              <LinkContainer to='/cart'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-shopping-cart'></i>Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id='username'>\r\n                  <LinkContainer to='/profile'>\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to='/login'>\r\n                  <Nav.Link>\r\n                    <i className='fas fa-user'></i>Sing in\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title='Admin' id='adminmenu'>\r\n                  <LinkContainer to='/admin/userlist'>\r\n                    <NavDropdown.Item>users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item>product</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/orderlist'>\r\n                    <NavDropdown.Item>orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\"\r\nimport { Container, Row, Col } from \"react-bootstrap\"\r\nimport { Link } from 'react-router-dom'\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <a\r\n              href='https://api.whatsapp.com/send?phone=525564710200&text=Hola%21%20Quisiera%20m%C3%A1s%20informaci%C3%B3n%20sobre%20DfMuebles.'\r\n              class='float'\r\n              target='_blank'\r\n            >\r\n              <i class='fab fa-whatsapp my-float'></i>\r\n            </a>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className='text-center py-3 '>\r\n            Copyrigth &copy;\r\n            <strong className='font-bold'>\r\n               powerd by : <Link to={{ pathname: \"http://www.ahoraaqui.com\" }} target=\"_blank\" >www.ahoraaqui.com</Link> abraham.kent.7@gmail.com\r\n               \r\n\r\n            </strong>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  {\r\n    value = !value ? \"\" : value\r\n  }\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? \"fas fa-star\"\r\n              : value >= (0.5 ? \"fas fa-star-half-alt\" : \"far fa-star\")\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? \"fas fa-star\"\r\n              : value >= (1.5 ? \"fas fa-star-half-alt\" : \"far fa-star\")\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? \"fas fa-star\"\r\n              : value >= 2.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? \"fas fa-star\"\r\n              : value >= 3.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? \"fas fa-star\"\r\n              : value >= 4.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nRating.defaultProps = {\r\n  color: \"#f8e825\",\r\n}\r\n\r\nRating.propTypes = {\r\n  //value: PropTypes.number.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string,\r\n}\r\nexport default Rating\r\n","import React from \"react\"\r\nimport { Card } from \"react-bootstrap\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Rating from \"./Rating\"\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Card className='my-3 p-3 rounded'>\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image.split(\",\")[0]} variant='top' />\r\n      </Link>\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as='div'>\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n\r\n        <Card.Text as='div'>\r\n          <Rating\r\n            value={product.rating}\r\n            text={`${product.numReviews} reseñas`}\r\n          ></Rating>\r\n        </Card.Text>\r\n        <Card.Text as='h3'>${product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Product\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { Alert } from \"react-bootstrap\"\r\n\r\nconst Message = ({ variant, children, booltemporary = false }) => {\r\n  const [show, setShow] = useState(true)\r\n\r\n  useEffect(() => {\r\n    const timeoutID = window.setTimeout(() => {\r\n      if (booltemporary) {\r\n        setShow(false)\r\n        console.log(\"entra\")\r\n      }\r\n    }, 3000)\r\n\r\n    return () => window.clearTimeout(timeoutID)\r\n  }, [])\r\n\r\n  return show ? (\r\n    <Alert variant={variant} onClose={() => setShow(false)} dismissible>\r\n      {children}\r\n    </Alert>\r\n  ) : (\r\n    \"\"\r\n  )\r\n}\r\n\r\nMessage.defaultProps = {\r\n  variant: \"info\",\r\n}\r\nexport default Message\r\n","import React from \"react\"\r\nimport { Spinner } from \"react-bootstrap\"\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        width: \"100px\",\r\n        height: \"100px\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n      }}\r\n    >\r\n      <span className='sr-only'></span>\r\n    </Spinner>\r\n  )\r\n}\r\nexport default Loader\r\n","import React from \"react\"\r\n\r\nimport { Pagination } from \"react-bootstrap\"\r\nimport { LinkContainer } from \"react-router-bootstrap\"\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = \"\" }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                  ? `/search/${keyword}/page/${x + 1}`\r\n                  : `/page/${x + 1}`\r\n                : `/admin/productlist/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Paginate\r\n","import React from \"react\"\r\nimport { Helmet } from \"react-helmet\"\r\nconst Meta = ({ title, descripcion, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={descripcion} />\r\n      <meta name='keywords' content={keywords} />\r\n    </Helmet>\r\n  )\r\n}\r\nMeta.defaultProps = {\r\n  title: \"Bienvenido\",\r\n  descripcion: \"\",\r\n  keywords: \"\",\r\n}\r\nexport default Meta\r\n","import {\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from \"../constants/productConstants\"\r\nimport axios from \"axios\"\r\nexport const listProducts = (keyword = \"\", pageNumber = \"\") => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST })\r\n    const { data } = await axios.get(\r\n      `/api/products/?keyword=${keyword}&pageNumber=${pageNumber}`\r\n    )\r\n\r\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/products/${id}`, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n    })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/products/`, {}, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST,\r\n    })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  console.log(review)\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n    })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_TOP_REQUEST })\r\n    const { data } = await axios.get(`/api/products/top`)\r\n\r\n    dispatch({ type: PRODUCT_TOP_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React, { useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Carousel, Image } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Loader from \"./Loader\"\r\nimport Message from \"./Message\"\r\nimport { listTopProducts } from \"../actions/productAction\"\r\n\r\nconst ProductCarousel = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const productTopRated = useSelector((state) => state.productTopRated)\r\n  const { loading, error, products } = productTopRated\r\n\r\n  useEffect(() => {\r\n    dispatch(listTopProducts())\r\n  }, [dispatch])\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <Carousel pause='hover' className='bg-dark'>\r\n      {products.length > 0\r\n        ? products.map((product) => (\r\n            <Carousel.Item key={product._id}>\r\n              <div className='rounded1'>\r\n                <Link to={`/product/${product._id}`}>\r\n                  <Image src={product.image.split(\",\")[0]} alt={product.name} />\r\n                  <Carousel.Caption className='carousel-caption'>\r\n                    <h2>\r\n                      {product.name} (${product.price})\r\n                    </h2>\r\n                  </Carousel.Caption>\r\n                </Link>\r\n              </div>\r\n            </Carousel.Item>\r\n          ))\r\n        : \"\"}\r\n    </Carousel>\r\n  )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, { useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Row, Col } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Product from \"../components/Product\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport Paginate from \"../components/Paginate\"\r\nimport Meta from \"../components/Meta\"\r\nimport { listProducts } from \"../actions/productAction\"\r\nimport ProductCarouserl from \"../components/ProductCarouserl\"\r\n\r\nconst HomeScreen = ({ match }) => {\r\n  const keyword = match.params.keyword\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, page, pages } = productList\r\n  console.log(products)\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword, pageNumber))\r\n  }, [dispatch, keyword, pageNumber])\r\n\r\n  return (\r\n    <>\r\n      <Meta></Meta>\r\n      {!keyword ? (\r\n        <ProductCarouserl></ProductCarouserl>\r\n      ) : (\r\n        <Link to='/' className='btn btn-light'>\r\n          Regresar\r\n        </Link>\r\n      )}\r\n\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            {products\r\n              ? products.map((product, index) => (\r\n                  <Col sm={12} md={6} lg={4} xl={3} key={index}>\r\n                    <Product product={product} key={product._id.toString()} />\r\n                  </Col>\r\n                ))\r\n              : \"\"}\r\n          </Row>\r\n\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyword={keyword ? keyword : \"\"}\r\n          ></Paginate>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport SliderImage from \"react-zoom-slider\"\r\n\r\nconst ImageZoom = (images) => {\r\n  var data = {}\r\n  var tempData = []\r\n  const data3 = [\r\n    {\r\n      image:\r\n        \"https://cdn.tgdd.vn/Products/Images/42/209800/oppo-reno2-f-xanh-1-org.jpg\",\r\n      text: \"img1\",\r\n    },\r\n    {\r\n      image:\r\n        \"https://cdn.tgdd.vn/Products/Images/42/209800/oppo-reno2-f-xanh-4-org.jpg\",\r\n      text: \"img2\",\r\n    },\r\n    {\r\n      image:\r\n        \"https://cdn.tgdd.vn/Products/Images/42/209800/oppo-reno2-f-xanh-10-org.jpg\",\r\n      text: \"img3\",\r\n    },\r\n  ]\r\n\r\n  if (images.images) {\r\n    var imagesarraystring = images.images.substring(0, images.images.length - 1)\r\n    const imagesArray = imagesarraystring.split(\",\")\r\n    imagesArray.forEach((string) => {\r\n      var data1 = {}\r\n      console.log(\"foreach\")\r\n      data1[\"image\"] = string\r\n      data1[\"text\"] = \"\"\r\n\r\n      tempData.push(data1)\r\n    })\r\n    data = tempData\r\n  }\r\n  console.log(tempData)\r\n  return (\r\n    <>\r\n      {tempData.length > 0 ? (\r\n        <SliderImage\r\n          data={data}\r\n          width='100%'\r\n          showDescription={true}\r\n          direction='rigth'\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nImageZoom.propTypes = {\r\n  images: PropTypes.string,\r\n}\r\nexport default ImageZoom\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  ListGroupItem,\r\n  Form,\r\n} from \"react-bootstrap\"\r\nimport Rating from \"../components/Rating\"\r\nimport Message from \"../components/Message\"\r\nimport Meta from \"../components/Meta\"\r\nimport Loader from \"../components/Loader\"\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from \"../actions/productAction\"\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\"\r\nimport ImageZoom from \"../components/ImageZoom\"\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1)\r\n  const [rating, setRating] = useState(0)\r\n  const [comment, setComment] = useState(\"\")\r\n  //const [data, setData] = useState(\"\")\r\n  const dispatch = useDispatch()\r\n\r\n  const productDatails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDatails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\r\n  const {\r\n    success: successProductReview,\r\n    error: errorProductReview,\r\n  } = productReviewCreate\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      alert(\"review submitted\")\r\n      setRating(0)\r\n      setComment(\"\")\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n    } else {\r\n    }\r\n\r\n    dispatch(listProductDetails(match.params.id))\r\n  }, [dispatch, match, successProductReview])\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    dispatch(createProductReview(match.params.id, { rating, comment }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link className='btn btn-light my-4' to='/'>\r\n        Regresar\r\n      </Link>\r\n\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <Message variant='danger' booltemporary='false'>\r\n          {error}\r\n        </Message>\r\n      ) : (\r\n        <>\r\n          <Meta title={product.name}></Meta>\r\n          <Row>\r\n            <Col md={6}>\r\n              <ImageZoom images={product.image}></ImageZoom>\r\n            </Col>\r\n\r\n            <Col md={3}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h2>{product.name}</h2>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reseñas`}\r\n                  ></Rating>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>Precio:${product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Descripción:${product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col> Precio:</Col>\r\n                      <Col>\r\n                        <strong> ${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col> Stock:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0\r\n                          ? \"In Stock\"\r\n                          : \"out of stock1\"}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroupItem>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as='select'\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroupItem>\r\n                  )}\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className='btn-block'\r\n                      type='button'\r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                      Add to cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h2>Reseñas</h2>\r\n              {product.reviews.length === 0 && <Message>No reviews</Message>}\r\n              <ListGroup variant='flush'>\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} text=''></Rating>\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  <h2>Escribe una reseña</h2>\r\n                  {errorProductReview && (\r\n                    <Message variant='danger' booltemporary='true'>\r\n                      {errorProductReview}\r\n                    </Message>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId='rating'>\r\n                        <Form.Label>Clasificación</Form.Label>\r\n                        <Form.Control\r\n                          as='select'\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=''>Select..</option>\r\n                          <option value='1'>1 - Pobre</option>\r\n                          <option value='2'>2 - Justo</option>\r\n                          <option value='3'>3 - Bueno</option>\r\n                          <option value='4'>4 - Muy bueno</option>\r\n                          <option value='5'>5 - Excelente</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId='comment'>\r\n                        <Form.Label>Comentarios</Form.Label>\r\n                        <Form.Control\r\n                          as='textarea'\r\n                          row='3'\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button type='submit' variant='primary'>\r\n                        Enviar\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message booltemporary='false'>\r\n                      please <Link to='/login'>sing in</Link> to writte a review\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from \"axios\"\r\n\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from \"../constants/cartConstants\"\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  })\r\n\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  })\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  })\r\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data))\r\n}\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  })\r\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data))\r\n}\r\n","import React, { useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\"\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1\r\n\r\n  const dispatch = useDispatch()\r\n  const cart = useSelector((state) => state.cart)\r\n  const { cartItems } = cart\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty))\r\n    }\r\n  }, [dispatch, productId, qty])\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n    history.push(\"/login?redirect=shipping\")\r\n  }\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>shopping cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            your cart is empty<Link to='/'>Regresar</Link>{\" \"}\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image\r\n                      src={item.image}\r\n                      alt={item.name}\r\n                      fluid\r\n                      rounded\r\n                    ></Image>\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.producto}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    {\" \"}\r\n                    <Form.Control\r\n                      as='select'\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                Items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                proceed to Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from \"react\"\r\nimport { Container, Row, Col } from \"react-bootstrap\"\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport { login } from \"../actions/userActions\"\r\nimport FormContainer from \"../components/FormContainer\"\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\"\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    dispatch(login(email, password))\r\n  }\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sing In</h1>\r\n      {error && (\r\n        <Message variant='danger' booltemporary='true'>\r\n          {error}\r\n        </Message>\r\n      )}\r\n      {loading && <Loader></Loader>}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Addres</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter Email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type='submit' variant='primary'>\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Customer?{\" \"}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : \"/register\"}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport { register } from \"../actions/userActions\"\r\nimport FormContainer from \"../components/FormContainer\"\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\")\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [confirmPassword, setconfirmPassword] = useState(\"\")\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\"\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\")\r\n    } else {\r\n      dispatch(register(name, email, password))\r\n    }\r\n  }\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sing Up</h1>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader></Loader>}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter Name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Addres</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter Email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='confirmpassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter confirmPassword'\r\n            value={confirmPassword}\r\n            onChange={(e) => setconfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n      <Row className='py-3'>\r\n        <Col>\r\n          have an account?{\" \"}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from \"react\"\r\n\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\"\r\nimport { LinkContainer } from \"react-router-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\"\r\nimport { listMyOrders } from \"../actions/orderActions\"\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\"\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\")\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [confirmPassword, setconfirmPassword] = useState(\"\")\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy)\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\")\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n        dispatch(getUserDetails(\"profile\"))\r\n        dispatch(listMyOrders())\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\")\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n    }\r\n  }\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User profile</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {success && <Message variant='success'>Profile Updated</Message>}\r\n        {loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='name'>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type='name'\r\n              placeholder='Enter Name'\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email Addres</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Enter Email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Enter password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='confirmpassword'>\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Enter confirmPassword'\r\n              value={confirmPassword}\r\n              onChange={(e) => setconfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button type='submit' variant='primary'>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader></Loader>\r\n        ) : errorOrders ? (\r\n          <Message variant='danger'>{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DAte</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className='btn-sm' variant='light'>\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from \"axios\"\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_ALL_REQUEST,\r\n  ORDER_LIST_ALL_SUCCESS,\r\n  ORDER_LIST_ALL_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_FAIL,\r\n} from \"../constants/orderContants\"\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${orderId}/pay`,\r\n      paymentResult,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST,\r\n    })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listMyOrders = (orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listAllOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_ALL_REQUEST,\r\n    })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_ALL_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_ALL_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport { Nav } from \"react-bootstrap\"\r\nimport { LinkContainer } from \"react-router-bootstrap\"\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to='/login'>\r\n            <Nav.Link>Sign in</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign in</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to='/shipping'>\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to='/payment'>\r\n            <Nav.Link>payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to='/placeorder'>\r\n            <Nav.Link>place order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>place order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from \"react\"\r\nimport { Form, Button } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport CheckoutSteps from \"../components/CheckoutSteps\"\r\n\r\nimport { saveShippingAddress } from \"../actions/cartActions\"\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address)\r\n  const [city, setCity] = useState(shippingAddress.city)\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n  const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n  const dispatch = useDispatch()\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n    history.push(\"/payment\")\r\n  }\r\n  return (\r\n    <FormContainer>\r\n      <h1>Shipping</h1>\r\n      <CheckoutSteps step1 step2></CheckoutSteps>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter Address'\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter City'\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>POstal Code</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter POstal code'\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter Country'\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from \"react\"\r\nimport { Form, Button, Col } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport CheckoutSteps from \"../components/CheckoutSteps\"\r\n\r\nimport { savePaymentMethod } from \"../actions/cartActions\"\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  if (!shippingAddress) {\r\n    history.push(\"/shipping\")\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(\"Paypal\")\r\n\r\n  const dispatch = useDispatch()\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(savePaymentMethod(paymentMethod))\r\n    history.push(\"/placeorder\")\r\n  }\r\n  return (\r\n    <FormContainer>\r\n      <h1>Payment Method</h1>\r\n      <CheckoutSteps step3></CheckoutSteps>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as='legend'>Select Method</Form.Label>\r\n\r\n          <Col>\r\n            <Form.Check\r\n              type='radio'\r\n              label='Paypal or Credit Card'\r\n              id='PayPal'\r\n              name='paymentMethod'\r\n              value='Paypal'\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            {/* <Form.Check\r\n              type='radio'\r\n              label='Stripe'\r\n              id='Stripe'\r\n              name='paymentMethod'\r\n              value='Stripe'\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>*/}\r\n          </Col>\r\n        </Form.Group>\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from \"react\"\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport Message from \"../components/Message\"\r\nimport CheckoutSteps from \"../components/CheckoutSteps\"\r\n\r\nimport { createOrder } from \"../actions/orderActions\"\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n  const cart = useSelector((state) => state.cart)\r\n\r\n  // calculate prices\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2)\r\n  }\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems\r\n      .reduce((acc, item) => (acc + item.price) * item.qty, 0)\r\n      .toFixed(2)\r\n  )\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2)\r\n  const orderCreate = useSelector((state) => state.orderCreate)\r\n  const { order, success, error } = orderCreate\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success])\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        itemsPrice: cart.itemsPrice,\r\n        paymentMethod: cart.paymentMethod,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4></CheckoutSteps>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address</strong>\r\n                {cart.shippingAddress.address},, {cart.shippingAddress.city},{\" \"}\r\n                {cart.shippingAddress.postalcode},,{\" \"}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method:</strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>You cart es empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          ></Image>\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty}x ${item.price}= ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order{\" \"}\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { Row, Col, ListGroup, Image, Card, Button } from \"react-bootstrap\"\r\nimport axios from \"axios\"\r\nimport { PayPalButton } from \"react-paypal-button-v2\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from \"../actions/orderActions\"\r\nimport {\r\n  ORDER_DELIVER_RESET,\r\n  ORDER_PAY_RESET,\r\n} from \"../constants/orderContants\"\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id\r\n\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n  const dispatch = useDispatch()\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const orderPay = useSelector((state) => state.orderPay)\r\n  const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver)\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n  if (!loading) {\r\n    // calculate prices\r\n\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems\r\n        .reduce((acc, item) => (acc + item.price) * item.qty, 0)\r\n        .toFixed(2)\r\n    )\r\n  }\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\")\r\n    }\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get(\"/api/config/paypal\")\r\n      const script = document.createElement(\"script\")\r\n      script.type = \"text/javascript\"\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}&currency=MXN&locale=es_MX`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n\r\n      document.body.appendChild(script)\r\n    }\r\n    //order._id !== orderId ||\r\n\r\n    if (!order || successPay || successDeliver || order._id !== orderId) {\r\n      dispatch({ type: ORDER_PAY_RESET })\r\n      dispatch({ type: ORDER_DELIVER_RESET })\r\n      dispatch(getOrderDetails(orderId))\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript()\r\n      } else {\r\n        setSdkReady(true)\r\n      }\r\n    }\r\n  }, [dispatch, order, successPay, orderId, successDeliver])\r\n  const successPaymentHandler = (paymentResult) => {\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order))\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader></Loader>\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order:{order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name:</strong>\r\n                {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email:</strong>{\" \"}\r\n                <a href={`mailto:${order.user.email}`}> {order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address</strong>\r\n                {order.shippingAddress.address},, {order.shippingAddress.city},{\" \"}\r\n                {order.shippingAddress.postalcode},,{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.DeliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method:</strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          ></Image>\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty}x ${item.price}= ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader></Loader>}\r\n                  {!sdkReady ? (\r\n                    <Loader></Loader>\r\n                  ) : (\r\n                    <PayPalButton\r\n                      currency={\"MXN\"}\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    ></PayPalButton>\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader></Loader>}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark as delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect } from \"react\"\r\nimport { LinkContainer } from \"react-router-bootstrap\"\r\nimport { Table, Button } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport { listUsers, deleteUsers } from \"../actions/userActions\"\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n  const userList = useSelector((state) => state.userList)\r\n  const { loading, error, users } = userList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userDelete = useSelector((state) => state.userDelete)\r\n  const { success: successDelete } = userDelete\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers())\r\n    } else {\r\n      history.push(\"/login\")\r\n    }\r\n  }, [dispatch, history, userInfo, successDelete])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure\")) {\r\n      dispatch(deleteUsers(id))\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Name</th>\r\n              <th>email</th>\r\n              <th>Admin</th>\r\n              <th></th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className='fas  fa-check' style={{ color: \"green\" }}>\r\n                      {\" \"}\r\n                    </i>\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n                <td>\r\n                  <Button\r\n                    variant='danger'\r\n                    className='btn-sm'\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Form, Button } from \"react-bootstrap\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport { getUserDetails, updateUser } from \"../actions/userActions\"\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\"\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id\r\n\r\n  const [name, setName] = useState(\"\")\r\n  const [email, setEmail] = useState(\"\")\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET })\r\n      history.push(\"/admin/userlist\")\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n        setIsAdmin(user.isAdmin)\r\n      }\r\n    }\r\n  }, [dispatch, history, userId, user, successUpdate])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n  }\r\n  return (\r\n    <>\r\n      <Link to='/admin/userList' className='btn btn-ligth my-3'>\r\n        Regresar\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader></Loader>\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter Name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Addres</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter Email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isAdmin'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='is admin'\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from \"react\"\r\nimport { LinkContainer } from \"react-router-bootstrap\"\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport Paginate from \"../components/Paginate\"\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from \"../actions/productAction\"\r\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\"\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const PageNumber = match.params.pageNumber || 1\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, pages, page } = productList\r\n\r\n  const productDelete = useSelector((state) => state.productDelete)\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete\r\n\r\n  const productCreate = useSelector((state) => state.productCreate)\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n    if (!userInfo.isAdmin) {\r\n      history.push(\"/login\")\r\n    }\r\n\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`)\r\n    } else {\r\n      dispatch(listProducts(\"\", PageNumber))\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    PageNumber,\r\n  ])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure\")) {\r\n      dispatch(deleteProduct(id))\r\n    }\r\n  }\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct())\r\n  }\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={createProductHandler}>\r\n            <i className='fas fa-plus'></i>Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader></Loader>}\r\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n      {loadingCreate && <Loader></Loader>}\r\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Name</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                  <td>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true}></Paginate>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Form, Button } from \"react-bootstrap\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport { listProductDetails, updateProduct } from \"../actions/productAction\"\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\"\r\nimport axios from \"axios\"\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const [name, setName] = useState(\"\")\r\n  const [price, setPrice] = useState(0)\r\n  const [image, setImage] = useState([])\r\n  const [brand, setBrand] = useState(\"\")\r\n  const [category, setCategory] = useState(\"\")\r\n  const [countInStock, setCountInStock] = useState(0)\r\n  const [description, setDescription] = useState(0)\r\n  const [uploding, setUpLoading] = useState(false)\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET })\r\n      history.push(\"/admin/productList\")\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId))\r\n      } else {\r\n        setName(product.name)\r\n        setPrice(product.price)\r\n        setImage(...image, product.image)\r\n        setBrand(product.brand)\r\n        setCategory(product.category)\r\n        setCountInStock(product.countInStock)\r\n        setDescription(product.description)\r\n      }\r\n    }\r\n  }, [dispatch, history, productId, product, successUpdate])\r\n\r\n  const UploadFileHandler = async (e) => {\r\n    const files = e.target.files\r\n    let images = \"\"\r\n    for (let i = 0; i < files.length; i++) {\r\n      const file = files[i]\r\n      const formData = new FormData()\r\n      formData.append(\"image\", file)\r\n      setUpLoading(true)\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        }\r\n        const { data } = await axios.post(\"/api/upload\", formData, config)\r\n\r\n        images += data + \",\"\r\n        console.log(images)\r\n        setImage(images)\r\n        setUpLoading(false)\r\n      } catch (error) {\r\n        console.error(error)\r\n        setUpLoading(false)\r\n      }\r\n    }\r\n  }\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        brand,\r\n        category,\r\n        description,\r\n        countInStock,\r\n        image,\r\n      })\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      <Link to='/admin/productList' className='btn btn-ligth my-3'>\r\n        Regresar\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit product</h1>\r\n\r\n        {loadingUpdate && <Loader></Loader>}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate} </Message>}\r\n        {loading ? (\r\n          <Loader></Loader>\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter Name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>price Addres</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter price'\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image URL'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose Fie'\r\n                custom\r\n                multiple\r\n                onChange={UploadFileHandler}\r\n              ></Form.File>\r\n              {uploding && <Loader></Loader>}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='brand'>\r\n              <Form.Label>brand</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter brand  '\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='countInStock'>\r\n              <Form.Label>countInStock</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter countInStock URL'\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>category</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter category URL'\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description URL'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, { useEffect } from \"react\"\r\nimport { LinkContainer } from \"react-router-bootstrap\"\r\nimport { Table, Button } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport { listAllOrders } from \"../actions/orderActions\"\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n  const orderListAll = useSelector((state) => state.orderListAll)\r\n  const { loading, error, orders } = orderListAll\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listAllOrders())\r\n    } else {\r\n      history.push(\"/login\")\r\n    }\r\n  }, [dispatch, history, userInfo])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure\")) {\r\n      // dispatch(deleteUsers(id))\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>user</th>\r\n              <th>date</th>\r\n              <th>total</th>\r\n              <th>paid</th>\r\n              <th>deliver</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>{order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(10)\r\n                  ) : (\r\n                    <i className='fas fa-times'></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDeliverd ? (\r\n                    order.deliverdAt.substring(10)\r\n                  ) : (\r\n                    <i className='fas fa-times'></i>\r\n                  )}\r\n                </td>\r\n\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React from \"react\"\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport Header from \"./components/Header\"\r\nimport Footer from \"./components/Footer\"\r\nimport HomeScreen from \"./screens/HomeScreen\"\r\nimport ProductScreen from \"./screens/ProductScreen\"\r\nimport CartScreen from \"./screens/CartScreen\"\r\nimport LoginScreen from \"./screens/LoginScreen\"\r\nimport RegisterScreen from \"./screens/RegisterScreen\"\r\nimport ProfileScreen from \"./screens/profileScreen\"\r\nimport ShippingScreen from \"./screens/ShippingScreen\"\r\nimport PaymentScreen from \"./screens/PaymentScreen\"\r\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\"\r\nimport OrderScreen from \"./screens/OrderScreen\"\r\nimport UserListScreen from \"./screens/UserListScreen\"\r\nimport UserEditScreen from \"./screens/userEditScreen\"\r\nimport ProductListScreen from \"./screens/ProductListScreen\"\r\nimport ProductEditScreen from \"./screens/ProductEditScreen\"\r\nimport OrderListScreen from \"./screens/OrderListScreen\"\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Header></Header>\r\n      <main className='py-3'>\r\n        <Container>\r\n          <Route path='/login' component={LoginScreen} exact></Route>\r\n          <Route path='/placeorder' component={PlaceOrderScreen} exact></Route>\r\n          <Route path='/order/:id' component={OrderScreen} exact></Route>\r\n          <Route path='/shipping' component={ShippingScreen} exact></Route>\r\n          <Route path='/payment' component={PaymentScreen} exact></Route>\r\n          <Route path='/register' component={RegisterScreen} exact></Route>\r\n          <Route path='/profile' component={ProfileScreen} exact></Route>\r\n          <Route path='/product/:id' component={ProductScreen}></Route>\r\n          <Route path='/cart/:id?' component={CartScreen}></Route>\r\n          <Route path='/admin/userList' component={UserListScreen}></Route>\r\n          <Route\r\n            path='/admin/ProductList'\r\n            component={ProductListScreen}\r\n            exact\r\n          ></Route>\r\n          <Route\r\n            path='/admin/ProductList/:pageNumber'\r\n            component={ProductListScreen}\r\n            exact\r\n          ></Route>\r\n          <Route path='/admin/user/:id/edit' component={UserEditScreen}></Route>\r\n          <Route\r\n            path='/admin/product/:id/edit'\r\n            component={ProductEditScreen}\r\n          ></Route>\r\n          <Route path='/admin/orderlist' component={OrderListScreen}></Route>\r\n          <Route path='/search/:keyword' component={HomeScreen} exact></Route>\r\n          <Route path='/' component={HomeScreen} exact></Route>\r\n          <Route path='/page/:pageNumber' component={HomeScreen} exact></Route>\r\n          <Route\r\n            path='/search/:keyword/page/:pageNumber'\r\n            component={HomeScreen}\r\n            exact\r\n          ></Route>\r\n        </Container>\r\n      </main>\r\n      <Footer></Footer>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport store from \"./store\";\r\nimport \"./index.css\";\r\nimport \"./bootstrap.min.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}